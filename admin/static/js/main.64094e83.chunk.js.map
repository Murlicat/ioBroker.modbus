{"version":3,"sources":["Tabs/Options.js","Components/TsvDialog.js","Components/DeleteAllDialog.js","Components/DeleteDialog.js","Components/RegisterTable.js","Tabs/BaseRegisters.js","Tabs/InputRegisters.js","Tabs/HoldingRegisters.js","Tabs/DiscreteInputs.js","Tabs/Coils.js","App.js","serviceWorker.js","index.js"],"names":["Options","props","inputDisabled","input","name","native","params","type","showAliases","slave","inputDisplay","includes","changeParam","value","JSON","parse","stringify","multiDeviceId","disInputs","forEach","item","_address","inputRegs","holdingRegs","directAddresses","changeNative","state","inputs","title","Paper","className","this","classes","optionsContainer","Typography","variant","gutterBottom","header","I18n","t","map","Box","optionContainer","FormControlLabel","label","control","Checkbox","optionsCheckbox","disabled","checked","onChange","e","target","dimension","FormControl","InputLabel","Select","optionsSelect","options","option","MenuItem","TextField","optionsTextfield","InputProps","endAdornment","InputAdornment","position","tab","Grid","container","spacing","xs","md","optionsGrid","getInputsBlock","connectionInputs","generalInputs","Component","withStyles","theme","width","display","alignItems","paddingTop","paddingBottom","padding","textAlign","fontSize","tsvEditor","height","tsvEditorTextarea","fontFamily","useState","tsv","setTsv","useEffect","tsvResult","push","fields","field","data","undefined","toString","json2tsv","open","enqueueSnackbar","useSnackbar","Dialog","onClose","maxWidth","fullWidth","DialogTitle","DialogContent","DialogContentText","showPrintMargin","setOptions","firstLineNumber","mode","DialogActions","Button","color","onClick","Utils","copyToClipboard","startIcon","tsv2json","shift","success","errors","index","parseInt","itemValues","itemIndex","save","error","DeleteAllDialog","action","DeleteDialog","disableWarnings","setDisableWarnings","DataCell","result","sortedItem","editMode","setEditMode","ref","useRef","Tooltip","inputRef","tableCheckbox","getDisable","$index","list","rooms","allowNone","dense","inputProps","tableSelect","tableSelectContainer","find","tableTextfieldContainer","tableTextfield","TableCell","tableCell","window","setTimeout","current","focus","style","cursor","tableHeader","whiteSpace","fontWeight","tableContainer","overflow","maxHeight","tsvDialogOpen","setTsvDialogOpen","order","setOrder","orderBy","setOrderBy","localStorage","getItem","extendedMode","setExtendedMode","deleteAllDialog","setDeleteAllDialog","deleteDialog","setDeleteDialog","sortedData","sort","sortedItem1","sortedItem2","sort1","sort2","IconButton","addItem","Switch","setItem","Table","size","stickyHeader","TableHead","TableRow","filter","expert","formulaDisabled","isChecked","indeterminate","trueFound","falseFound","k","tooltip","newData","changeData","sorted","TableSortLabel","active","direction","isAsc","length","TableBody","hover","lastTime","sessionStorage","Date","deleteItem","disableDialogs","toISOString","BaseRegisters","nativeField","newItem","getFields","splice","InputRegisters","item1","item2","lastItem","len","deviceId","factor","offset","formula","role","cw","isScale","types","roles","propTypes","common","PropTypes","object","isRequired","instance","number","adapterName","string","onError","func","onLoad","changed","bool","socket","HoldingRegisters","poll","wp","DiscreteInputs","Coils","tabs","component","TabOptions","TabDiscreteInputs","icon","marginRight","TabCoils","TabInputRegisters","TabHoldingRegisters","App","io","location","port","console","log","SocketClient","extendedProps","encryptedFields","translations","require","moreLoaded","getEnums","then","setState","selectedTab","findIndex","loaded","background","palette","default","text","primary","AppBar","Tabs","getSelectedTab","selectTab","scrollButtons","Tab","data-name","isIFrame","tabContentIFrame","tabContent","TabComponent","errorText","onLoadConfig","attr","cb","updateNativeValue","getIsChanged","renderError","renderSaveCloseButtons","themeType","GenericApp","root","minHeight","Boolean","hostname","match","themeName","getThemeName","version","build","ReactDOM","render","onThemeChange","_theme","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.64094e83.chunk.js","sourcesContent":["import {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {withStyles} from '@material-ui/core/styles';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\n\r\nimport connectionInputs from '../data/optionsConnection';\r\nimport generalInputs from '../data/optionsGeneral';\r\n\r\nconst styles = theme => ({\r\n    optionsSelect: {\r\n        width: 280\r\n    },\r\n    optionsTextfield: {\r\n        width: 280\r\n    },\r\n    optionContainer: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        paddingTop: 4,\r\n        paddingBottom: 4\r\n    },\r\n    optionsContainer: {\r\n        width: `calc(100% - ${theme.spacing(4)}px)`,\r\n        padding: theme.spacing(2),\r\n        display: 'inline-block',\r\n        textAlign: 'left'\r\n    },\r\n    optionsGrid: {\r\n        textAlign: 'center',\r\n        padding: theme.spacing(2),\r\n    },\r\n    header: {\r\n        fontSize: 24,\r\n    }\r\n});\r\n\r\nclass Options extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    inputDisabled = input => {\r\n        if (input.name === 'slave' && this.props.native.params.type !== 'tcp') {\r\n            return true;\r\n        } else\r\n        if (input.name === 'directAddresses' && !this.props.native.params.showAliases) {\r\n            return true;\r\n        } else\r\n        if (input.name === 'multiDeviceId' && (this.props.native.params.slave === '1' || this.props.native.params.slave === 1)) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    inputDisplay = input => {\r\n        if (['tcp', 'tcprtu'].includes(this.props.native.params.type)) {\r\n            if (['comName', 'baudRate', 'dataBits', 'stopBits', 'parity'].includes(input.name)) {\r\n                return false;\r\n            }\r\n        } else {\r\n            if (['bind', 'port'].includes(input.name)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    getInputsBlock(inputs, title) {\r\n        return <><Paper className={this.props.classes.optionsContainer}>\r\n            <Typography variant=\"h4\" gutterBottom className={this.props.classes.header}>{I18n.t(title)}</Typography>\r\n            {inputs.map(input => {\r\n            if (input.type === 'checkbox') {\r\n                if (!this.inputDisplay(input)) {\r\n                    return null;\r\n                }\r\n                return <Box className={this.props.classes.optionContainer} key={input.name}><FormControlLabel\r\n                    label={I18n.t(input.title)}\r\n                    control={<Checkbox\r\n                        label={I18n.t(input.title)}\r\n                        className={this.props.classes.optionsCheckbox}\r\n                        disabled={this.inputDisabled(input)}\r\n                        checked={this.props.native.params[input.name]}\r\n                        onChange={e => this.changeParam(input.name, e.target.checked)}\r\n                />}/> {input.dimension ? I18n.t(input.dimension) : null}</Box>\r\n            } else if (input.type === 'select') {\r\n                if (!this.inputDisplay(input)) {\r\n                    return null;\r\n                }\r\n                return <Box className={this.props.classes.optionContainer} key={input.name}>\r\n                    <FormControl>\r\n                        <InputLabel>{I18n.t(input.title)}</InputLabel>\r\n                        <Select\r\n                            className={this.props.classes.optionsSelect}\r\n                            disabled={this.inputDisabled(input)}\r\n                            value={this.props.native.params[input.name] || ''}\r\n                            onChange={e => this.changeParam(input.name, e.target.value)}\r\n                        >\r\n                            {input.options.map(option =>\r\n                                <MenuItem key={option.value} value={option.value}>{option.title}</MenuItem>\r\n                            )}\r\n                        </Select>\r\n                    </FormControl> {input.dimension ? I18n.t(input.dimension) : null}\r\n                </Box>\r\n            } else {\r\n                if (!this.inputDisplay(input)) {\r\n                    return null;\r\n                }\r\n                return <Box className={this.props.classes.optionContainer} key={input.name}><TextField\r\n                    type={input.type}\r\n                    label={I18n.t(input.title)}\r\n                    className={this.props.classes.optionsTextfield}\r\n                    disabled={this.inputDisabled(input)}\r\n                    value={this.props.native.params[input.name]}\r\n                    InputProps={{endAdornment: input.dimension ? <InputAdornment position=\"end\">{I18n.t(input.dimension)}</InputAdornment> : null}}\r\n                    onChange={e => this.changeParam(input.name, e.target.value)}\r\n                /></Box>\r\n            }\r\n        })}\r\n        </Paper></>\r\n    }\r\n\r\n    render() {\r\n        return <form className={ this.props.classes.tab }>\r\n            <Grid container spacing={2} >\r\n                <Grid item xs={12} md={6} className={ this.props.classes.optionsGrid }>{this.getInputsBlock(connectionInputs, 'Connection parameters')}</Grid>\r\n                <Grid item xs={12} md={6} className={ this.props.classes.optionsGrid }>{this.getInputsBlock(generalInputs, 'General')}</Grid>\r\n            </Grid>\r\n        </form>;\r\n    }\r\n\r\n    changeParam = (name, value) => {\r\n        let native = JSON.parse(JSON.stringify(this.props.native));\r\n        native.params[name] = value;\r\n        if (name === 'slave') {\r\n            if (value === '1' || value === 1) {\r\n                native.params.multiDeviceId = false;\r\n            }\r\n        } else\r\n        if (name === 'type') {\r\n            if (value !== 'tcp' && (native.params.slave === 1 || native.params.slave === '1')) {\r\n                native.params.slave = '0';\r\n            }\r\n        } else\r\n        if (name === 'showAliases') {\r\n            native.disInputs.forEach(item => (value ? item._address += 10000 : item._address -= 10000))\r\n            native.inputRegs.forEach(item => (value ? item._address += 30000 : item._address -= 30000))\r\n            native.holdingRegs.forEach(item => (value ? item._address += 40000 : item._address -= 40000))\r\n            if (!value) {\r\n                native.params.directAddresses = false;\r\n            }\r\n        }\r\n        this.props.changeNative(native);\r\n    }\r\n}\r\n\r\nOptions.propTypes = {\r\n    common: PropTypes.object.isRequired,\r\n    native: PropTypes.object.isRequired,\r\n    instance: PropTypes.number.isRequired,\r\n    adapterName: PropTypes.string.isRequired,\r\n    onError: PropTypes.func,\r\n    onLoad: PropTypes.func,\r\n    onChange: PropTypes.func,\r\n    changed: PropTypes.bool,\r\n    socket: PropTypes.object.isRequired,\r\n    rooms: PropTypes.object,\r\n};\r\n\r\nexport default withStyles(styles)(Options);\r\n","import { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {withStyles} from '@material-ui/core/styles';\r\n\r\nimport { tsv2json, json2tsv } from 'tsv-json';\r\nimport { useSnackbar } from 'notistack';\r\nimport AceEditor from 'react-ace';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport Utils from '@iobroker/adapter-react/Components/Utils';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\r\n\r\nconst styles = theme => ({\r\n    tsvEditor: {\r\n        width: '100%',\r\n        height: 400\r\n    },\r\n    tsvEditorTextarea: {\r\n        fontFamily: 'monospace'\r\n    }\r\n});\r\n\r\nconst TsvDialog = (props) => {\r\n    const [tsv, setTsv] = useState('');\r\n    useEffect(() => {\r\n        let tsvResult = [];\r\n        tsvResult.push(props.fields.map(field => field.name));\r\n        props.data.forEach(item =>\r\n            tsvResult.push(props.fields.map(field => item[field.name] !== undefined ? item[field.name].toString() : ''))\r\n        );\r\n        setTsv(json2tsv(tsvResult));\r\n    }, [props.open]); // eslint-disable-line react-hooks/exhaustive-deps\r\n    const { enqueueSnackbar } = useSnackbar();\r\n\r\n    if (!props.open) {\r\n        return null;\r\n    }\r\n\r\n    const saveTsv = () => {\r\n        let data = tsv2json(tsv);\r\n        let fields = data.shift();\r\n        let success = true;\r\n        let errors = [];\r\n        for (let index in props.fields) {\r\n            if (props.fields[index].name !== fields[index]) {\r\n                errors.push(<>No field <i>{props.fields[index].name}</i> in position <i>{parseInt(index) + 1}</i>!</>);\r\n                success = false;\r\n            }\r\n        }\r\n\r\n        data = data.map((itemValues, itemIndex) => {\r\n            let item = {};\r\n            for (let index in props.fields) {\r\n                if (props.fields[index].type === 'select' && !props.fields[index].options.map(option => option.value).includes(itemValues[index])) {\r\n                    errors.push(<>Value <i>{itemValues[index]}</i> is wrong for field <i>{props.fields[index].name}</i> in position <i>{parseInt(itemIndex) + 1}</i>!</>);\r\n                    success = false;\r\n                }\r\n                if (props.fields[index].type === 'checkbox') {\r\n                    itemValues[index] = itemValues[index] === 'true' ? true : false;\r\n                }\r\n                item[props.fields[index].name] = itemValues[index];\r\n            }\r\n            return item;\r\n        });\r\n\r\n        if (!success) {\r\n            enqueueSnackbar(<div>{errors.map((error, index) => <div key={index}>{error}</div>)}</div>, { variant: 'error' });\r\n            return;\r\n        }\r\n        props.save(data);\r\n        props.onClose();\r\n    };\r\n\r\n    return <Dialog\r\n        open={props.open}\r\n        onClose={props.onClose}\r\n        maxWidth=\"lg\"\r\n        fullWidth\r\n    >\r\n        <DialogTitle>{I18n.t('Edit data as TSV')}</DialogTitle>\r\n        <DialogContent>\r\n            <DialogContentText>{I18n.t('You can copy, paste and edit data as TSV.')}</DialogContentText>\r\n            <div>\r\n                <AceEditor\r\n                    onChange={e => setTsv(e)}\r\n                    height=\"400px\"\r\n                    showPrintMargin={false}\r\n                    value={tsv}\r\n                    className={props.classes.tsvEditor}\r\n                    width=\"100%\"\r\n                    setOptions={{firstLineNumber: 0}}\r\n                    mode={null}\r\n                />\r\n            </div>\r\n        </DialogContent>\r\n        <DialogActions>\r\n            <Button variant=\"outlined\" color=\"primary\" onClick={e => {\r\n                Utils.copyToClipboard(tsv, e);\r\n                enqueueSnackbar(I18n.t('TSV was copied to clipboard'));\r\n            }} startIcon={<FileCopyIcon />}>{I18n.t('Copy to clipboard')}</Button>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={saveTsv} startIcon={<SaveIcon />}>{I18n.t('Import')}</Button>\r\n            <Button variant=\"contained\" onClick={props.onClose} startIcon={<ClearIcon />}>{I18n.t('Close')}</Button>\r\n        </DialogActions>\r\n    </Dialog>\r\n}\r\n\r\nTsvDialog.propTypes = {\r\n    open: PropTypes.bool,\r\n    onClose: PropTypes.func,\r\n    classes: PropTypes.object,\r\n    save: PropTypes.func,\r\n    fields: PropTypes.array,\r\n    data: PropTypes.array\r\n}\r\n\r\nexport default withStyles(styles)(TsvDialog);","import PropTypes from 'prop-types';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\n\r\nconst DeleteAllDialog = (props) => {\r\n    return props.open ? <Dialog open={props.open} onClose={props.onClose}>\r\n        <DialogTitle>{I18n.t('Delete all items')}</DialogTitle>\r\n        <DialogContent>\r\n            <DialogContentText>{I18n.t('Are you sure to delete all items?')}</DialogContentText>\r\n            <DialogActions>\r\n                <Button variant=\"contained\" color=\"secondary\" startIcon={<DeleteIcon />} onClick={() => {\r\n                    props.action();\r\n                    props.onClose();\r\n                }}>{I18n.t('Delete all items')}</Button>\r\n                <Button variant=\"contained\" onClick={props.onClose} startIcon={<ClearIcon />}>{I18n.t('Cancel')}</Button>\r\n            </DialogActions>\r\n        </DialogContent>\r\n    </Dialog> : null;\r\n}\r\n\r\nDeleteAllDialog.propTypes = {\r\n    open: PropTypes.bool,\r\n    action: PropTypes.func,\r\n    onClose: PropTypes.func,\r\n    classes: PropTypes.object,\r\n}\r\n\r\nexport default DeleteAllDialog;","import { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\n\r\nconst DeleteDialog = (props) => {\r\n    const [disableWarnings, setDisableWarnings] = useState(false);\r\n    useEffect(() => {\r\n        setDisableWarnings(false);\r\n    }, [props.open]);\r\n\r\n    return props.open ? <Dialog open={props.open} onClose={props.onClose}>\r\n        <DialogTitle>{I18n.t('Delete item')}</DialogTitle>\r\n        <DialogContent>\r\n            <DialogContentText>{I18n.t('Are you sure to delete item with address \"%s\"?', props.item._address)}</DialogContentText>\r\n            <DialogContentText><FormControlLabel\r\n                label={I18n.t('Don\\'t show this message in 5 minutes')}\r\n                control={<Checkbox\r\n                    checked={disableWarnings}\r\n                    onChange={e => setDisableWarnings(e.target.checked)}\r\n            />}/></DialogContentText>\r\n            <DialogActions>\r\n                <Button variant=\"contained\" color=\"secondary\" startIcon={<DeleteIcon />} onClick={() => {\r\n                    props.action(disableWarnings);\r\n                    props.onClose();\r\n                }}>{I18n.t('Delete')}</Button>\r\n                <Button variant=\"contained\" onClick={props.onClose} startIcon={<ClearIcon />}>{I18n.t('Cancel')}</Button>\r\n            </DialogActions>\r\n        </DialogContent>\r\n    </Dialog> : null;\r\n}\r\n\r\nDeleteDialog.propTypes = {\r\n    open: PropTypes.bool,\r\n    onClose: PropTypes.func,\r\n    classes: PropTypes.object,\r\n    action: PropTypes.func,\r\n    item: PropTypes.object,\r\n}\r\n\r\nexport default DeleteDialog;","import { useState, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {withStyles} from '@material-ui/core/styles';\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Textfield from '@material-ui/core/Textfield';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport ImportExport from '@material-ui/icons/ImportExport';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\n\r\nimport ExpertIcon from '@iobroker/adapter-react/icons/IconExpert';\r\nimport TextWithIcon from '@iobroker/adapter-react/Components/TextWithIcon';\r\nimport SelectWithIcon from '@iobroker/adapter-react/Components/SelectWithIcon';\r\n\r\nimport TsvDialog from './TsvDialog';\r\nimport DeleteAllDialog from './DeleteAllDialog';\r\nimport DeleteDialog from './DeleteDialog';\r\n\r\nconst styles = theme => ({\r\n    tableHeader: {\r\n        whiteSpace: 'nowrap',\r\n        fontWeight: 'bold',\r\n        fontSize: '80%',\r\n        padding: '0px 8px'\r\n    },\r\n    tableCell: {\r\n        whiteSpace: 'nowrap',\r\n        fontSize: '80%',\r\n        padding: '0px 8px'\r\n    },\r\n    tableContainer: {\r\n        overflow: 'auto',\r\n        maxHeight: 'calc(100vh - 180px)'\r\n    },\r\n    tableTextfield: {\r\n        fontSize: '80%'\r\n    },\r\n    tableSelect: {\r\n        fontSize: '80%'\r\n    },\r\n    tableTextfieldContainer: {\r\n        width: '100%'\r\n    },\r\n    tableSelectContainer: {\r\n        width: '100%'\r\n    }\r\n});\r\n\r\nconst DataCell = props => {\r\n    const sortedItem = props.sortedItem;\r\n    const field = props.field;\r\n    const editMode = props.editMode;\r\n    const setEditMode = props.setEditMode;\r\n\r\n    const ref = useRef();\r\n    // useEffect(() => {\r\n    //     if (props.editMode) {\r\n    //         // ref.current && ref.current.focus()\r\n    //         //window.setTimeout(() => ref.current && ref.current.focus(), 1000);\r\n    //     }\r\n    // }, [props.editMode])\r\n\r\n    let item = sortedItem.item;\r\n    let result;\r\n    if (field.type === 'checkbox') {\r\n        if (!editMode) {\r\n            result = <Checkbox\r\n                checked={!!item[field.name]}\r\n                disabled\r\n            />;\r\n        } else {\r\n            result = <Tooltip title={I18n.t(field.title)}>\r\n                <Checkbox\r\n                    inputRef={ref}\r\n                    className={props.classes.tableCheckbox}\r\n                    checked={!!item[field.name]}\r\n                    disabled={props.getDisable(sortedItem.$index, field.name)}\r\n                    onChange={e => props.changeParam(sortedItem.$index, field.name, e.target.checked)}\r\n                />\r\n            </Tooltip>;\r\n        }\r\n    } else if (field.type === 'rooms') {\r\n        if (!editMode) {\r\n            result = <TextWithIcon list={props.rooms} value={item[field.name]}/>;\r\n        } else {\r\n            result = <SelectWithIcon\r\n                list={props.rooms}\r\n                allowNone={true}\r\n                value={item[field.name]}\r\n                dense={true}\r\n                inputProps={{ref, className: props.classes.tableSelect}}\r\n                disabled={props.getDisable(sortedItem.$index, field.name)}\r\n                onChange={value => props.changeParam(sortedItem.$index, field.name, value)}\r\n                className={props.classes.tableSelectContainer}\r\n            />;\r\n        }\r\n    } else if (field.type === 'select') {\r\n        if (!editMode) {\r\n            let option = field.options.find(option => option.value === item[field.name]);\r\n            result = option ? option.title : '';\r\n        } else {\r\n            result = <Select\r\n                value={item[field.name]}\r\n                inputProps={{ref, className: props.classes.tableSelect}}\r\n                disabled={props.getDisable(sortedItem.$index, field.name)}\r\n                onChange={e => props.changeParam(sortedItem.$index, field.name, e.target.value)}\r\n                className={props.classes.tableSelectContainer}\r\n            >\r\n                {field.options.map(option =>\r\n                    <MenuItem key={option.value} value={option.value}>{option.title ? option.title : <i>{I18n.t('Nothing')}</i>}</MenuItem>\r\n                )}\r\n            </Select>;\r\n        }\r\n    } else {\r\n        if (!editMode) {\r\n            result = item[field.name] ? item[field.name] : null;\r\n        } else {\r\n            result = <Textfield value={item[field.name]} className={props.classes.tableTextfieldContainer}\r\n                inputProps={{ref: ref, className: props.classes.tableTextfield}}\r\n                type={field.type}\r\n                onChange={e => props.changeParam(sortedItem.$index, field.name, e.target.value)}\r\n                disabled={props.getDisable(sortedItem.$index, field.name)}\r\n            />;\r\n        }\r\n    }\r\n\r\n    return <TableCell\r\n        className={props.classes.tableCell}\r\n        onClick={e => {\r\n            setEditMode(true);\r\n            window.setTimeout(() => ref.current && ref.current.focus(), 100);\r\n        }}\r\n        style={{\r\n            cursor: editMode ? null : 'pointer'\r\n        }}\r\n        // style={{padding: '0px 4px', border: 0}}\r\n    >\r\n        {result}\r\n    </TableCell>;\r\n}\r\n\r\nconst RegisterTable = props => {\r\n    const [tsvDialogOpen, setTsvDialogOpen] = useState(false);\r\n    const [order, setOrder] = useState('asc');\r\n    const [orderBy, setOrderBy] = useState('_address');\r\n    const [editMode, setEditMode] = useState(true);\r\n    const [extendedMode, setExtendedMode] = useState(window.localStorage.getItem('Modbus.extendedMode') === 'true');\r\n    const [deleteAllDialog, setDeleteAllDialog] = useState({\r\n        open: false,\r\n        action: null,\r\n    });\r\n    const [deleteDialog, setDeleteDialog] = useState({\r\n        open: false,\r\n        item: null,\r\n        action: null,\r\n    });\r\n\r\n    let sortedData = []\r\n    props.data.forEach((item, index) => {sortedData[index] = {item: item, $index: index}});\r\n    sortedData.sort((sortedItem1, sortedItem2) => {\r\n        let sort1;\r\n        let sort2;\r\n        if (orderBy === '$index') {\r\n            sort1 = sortedItem1[orderBy];\r\n            sort2 = sortedItem2[orderBy];\r\n        } else if (props.fields[orderBy] && props.fields[orderBy].type === 'number') {\r\n            sort1 = parseInt(sortedItem1.item[orderBy]);\r\n            sort2 = parseInt(sortedItem2.item[orderBy]);\r\n        } else {\r\n            sort1 = sortedItem1.item[orderBy];\r\n            sort2 = sortedItem2.item[orderBy];\r\n        }\r\n        return (order === 'asc' ? sort1 > sort2 : sort1 < sort2) ? 1 : -1;\r\n    });\r\n\r\n    return <div>\r\n        <div>\r\n            <Tooltip title={I18n.t('Add line')}>\r\n                <IconButton onClick={e => props.addItem()}>\r\n                    <AddIcon/>\r\n                </IconButton>\r\n            </Tooltip>\r\n            <Tooltip title={I18n.t('Edit as TSV (Tab separated values)')}>\r\n                <IconButton onClick={() => setTsvDialogOpen(true)}>\r\n                    <ImportExport/>\r\n                </IconButton>\r\n            </Tooltip>\r\n            <FormControlLabel\r\n                control={<Switch checked={editMode} onChange={e => setEditMode(e.target.checked)}/>}\r\n                label={I18n.t('Edit mode')}\r\n            />\r\n            <Tooltip title={I18n.t('Toggle extended mode')}>\r\n                <IconButton\r\n                    color={extendedMode ? 'primary' : 'inherit'}\r\n                    onClick={() => {\r\n                        window.localStorage.setItem('Modbus.extendedMode', extendedMode ? 'false' : 'true');\r\n                        setExtendedMode(!extendedMode);\r\n                    }}>\r\n                    <ExpertIcon/>\r\n                </IconButton>\r\n            </Tooltip>\r\n        </div>\r\n        <div className={props.classes.tableContainer}>\r\n            <Table size=\"small\"\r\n                   stickyHeader\r\n                   padding=\"none\"\r\n            >\r\n                <TableHead>\r\n                    <TableRow>\r\n                        {props.fields.filter(item => (extendedMode || !item.expert) && (!props.formulaDisabled || !item.formulaDisabled)).map(field => {\r\n                            let isChecked = false;\r\n                            let indeterminate = false;\r\n                            let trueFound = false;\r\n                            let falseFound = false;\r\n                            for (let k in props.data) {\r\n                                if (props.data[k][field.name]) {\r\n                                    isChecked = true;\r\n                                    trueFound = true;\r\n                                } else {\r\n                                    isChecked = false;\r\n                                    falseFound = true;\r\n                                }\r\n\r\n                                if (trueFound && falseFound) {\r\n                                    indeterminate = true;\r\n                                    isChecked = false;\r\n                                    break;\r\n                                }\r\n                            }\r\n\r\n                            return <TableCell\r\n                                key={field.name}\r\n                                style={{width: field.type === 'checkbox' ? 20 : field.width}}\r\n                                className={props.classes.tableHeader}\r\n                                title={field.tooltip ? I18n.t(field.tooltip) : null}\r\n                            >\r\n                                {field.type === 'checkbox' ?\r\n                                    <Tooltip title={I18n.t('Change all')}>\r\n                                        <Checkbox\r\n                                            indeterminate={indeterminate}\r\n                                            checked={isChecked}\r\n                                            onChange={e => {\r\n                                                let newData = JSON.parse(JSON.stringify(props.data));\r\n                                                newData.forEach(item =>\r\n                                                    item[field.name] = e.target.checked);\r\n                                                props.changeData(newData);\r\n                                            }}\r\n                                        />\r\n                                    </Tooltip>\r\n                                    : null}\r\n                                {field.sorted ? <TableSortLabel\r\n                                    active={field.name === orderBy}\r\n                                    direction={order}\r\n                                    onClick={e => {\r\n                                        const isAsc = orderBy === field.name && order === 'asc';\r\n                                        setOrder(isAsc ? 'desc' : 'asc');\r\n                                        setOrderBy(field.name);\r\n                                    }}\r\n                                >{I18n.t(field.title)}</TableSortLabel> : I18n.t(field.title)}\r\n                            </TableCell>\r\n                        })}\r\n                        <TableCell>\r\n                            <Tooltip title={I18n.t('Delete all')}>\r\n                                <div>\r\n                                    <IconButton\r\n                                        size=\"small\"\r\n                                        onClick={e => setDeleteAllDialog({\r\n                                            open: true,\r\n                                            action: () => props.changeData([]),\r\n                                        })}\r\n                                        disabled={!props.data.length}\r\n                                    >\r\n                                        <DeleteIcon/>\r\n                                    </IconButton>\r\n                                </div>\r\n                            </Tooltip>\r\n                        </TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {\r\n                        sortedData.map((sortedItem) =>\r\n                            <TableRow hover key={sortedItem.$index}>\r\n                                {props.fields.filter(item => (extendedMode || !item.expert) && (!props.formulaDisabled || !item.formulaDisabled)).map(field =>\r\n                                    <DataCell sortedItem={sortedItem} field={field} editMode={editMode} rooms={props.rooms}\r\n                                              setEditMode={setEditMode} key={field.name} {...props} />\r\n                                )}\r\n                                <TableCell>\r\n                                    <Tooltip title={I18n.t('Delete')}>\r\n                                        <div>\r\n                                            <IconButton size=\"small\" onClick={e => {\r\n                                                let lastTime = window.sessionStorage.getItem('disableDeleteDialogs');\r\n                                                if (lastTime && (new Date() - new Date(lastTime)) < 1000 * 60 * 5) {\r\n                                                    props.deleteItem(sortedItem.$index);\r\n                                                    return;\r\n                                                }\r\n                                                setDeleteDialog({\r\n                                                    open: true,\r\n                                                    action: disableDialogs => {\r\n                                                        if (disableDialogs) {\r\n                                                            window.sessionStorage.setItem('disableDeleteDialogs', (new Date()).toISOString());\r\n                                                        }\r\n                                                        props.deleteItem(sortedItem.$index);\r\n                                                    },\r\n                                                    item: sortedItem.item\r\n                                                })\r\n                                            }}>\r\n                                                <DeleteIcon/>\r\n                                            </IconButton>\r\n                                        </div>\r\n                                    </Tooltip>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        )\r\n                    }\r\n                </TableBody>\r\n            </Table>\r\n        </div>\r\n        <TsvDialog\r\n            open={tsvDialogOpen}\r\n            save={props.changeData}\r\n            onClose={() => setTsvDialogOpen(false)}\r\n            data={props.data}\r\n            fields={props.fields}\r\n        />\r\n        <DeleteAllDialog\r\n            open={deleteAllDialog.open}\r\n            action={deleteAllDialog.action}\r\n            onClose={() => setDeleteAllDialog({\r\n                open: false,\r\n                action: null,\r\n            })}\r\n        />\r\n        <DeleteDialog\r\n            open={deleteDialog.open}\r\n            action={deleteDialog.action}\r\n            onClose={() => setDeleteDialog({\r\n                open: false,\r\n                action: null,\r\n                item: null\r\n            })}\r\n            item={deleteDialog.item}\r\n        />\r\n    </div>;\r\n}\r\n\r\nRegisterTable.propTypes = {\r\n    data: PropTypes.array,\r\n    fields: PropTypes.array,\r\n    classes: PropTypes.object,\r\n    addItem: PropTypes.func,\r\n    changeData: PropTypes.func,\r\n    deleteItem: PropTypes.func,\r\n    rooms: PropTypes.object,\r\n    formulaDisabled: PropTypes.bool,\r\n}\r\n\r\nexport default withStyles(styles)(RegisterTable);","import {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport RegisterTable from '../Components/RegisterTable';\r\n\r\nclass BaseRegisters extends Component {\r\n    nativeField = '';\r\n\r\n    getFields() {\r\n        return [];\r\n    }\r\n\r\n    changeParam = (index, name, value) => {\r\n        let data = JSON.parse(JSON.stringify(this.props.native[this.nativeField]));\r\n        data[index][name] = value;\r\n        this.props.onChange(this.nativeField, data);\r\n    }\r\n\r\n    addItem = () => {\r\n        let data = JSON.parse(JSON.stringify(this.props.native[this.nativeField]));\r\n        let newItem = {}\r\n        this.getFields().forEach(field => newItem[field.name] = '')\r\n        data.push(newItem);\r\n        this.props.onChange(this.nativeField, data);\r\n    }\r\n\r\n    deleteItem = (index) => {\r\n        let data = JSON.parse(JSON.stringify(this.props.native[this.nativeField]));\r\n        data.splice(index, 1);\r\n        this.props.onChange(this.nativeField, data);\r\n    }\r\n\r\n    changeData = (data) => {\r\n        this.props.onChange(this.nativeField, data);\r\n    }\r\n\r\n    getDisable = (index, name) => {\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        return <Paper>\r\n            <RegisterTable\r\n                fields={this.getFields()}\r\n                data={this.props.native[this.nativeField]}\r\n                changeParam={this.changeParam}\r\n                addItem={this.addItem}\r\n                deleteItem={this.deleteItem}\r\n                changeData={this.changeData}\r\n                getDisable={this.getDisable}\r\n                formulaDisabled={this.props.formulaDisabled}\r\n                rooms={this.props.rooms}\r\n            />\r\n        </Paper>\r\n    }\r\n}\r\n\r\nBaseRegisters.propTypes = {\r\n    common: PropTypes.object.isRequired,\r\n    native: PropTypes.object.isRequired,\r\n    instance: PropTypes.number.isRequired,\r\n    adapterName: PropTypes.string.isRequired,\r\n    onError: PropTypes.func,\r\n    onLoad: PropTypes.func,\r\n    onChange: PropTypes.func,\r\n    changed: PropTypes.bool,\r\n    socket: PropTypes.object.isRequired,\r\n    rooms: PropTypes.object,\r\n    formulaDisabled: PropTypes.bool,\r\n};\r\n\r\nexport default BaseRegisters;\r\n","import PropTypes from 'prop-types';\r\n\r\nimport types from '../data/types';\r\nimport roles from '../data/roles';\r\n\r\nimport BaseRegisters from './BaseRegisters';\r\n\r\nclass InputRegisters extends BaseRegisters {\r\n    nativeField = 'inputRegs';\r\n\r\n    getFields() {\r\n        let result = [\r\n            {name: '_address', title: 'Address', type: 'number', sorted: true, width: 20},\r\n            {name: 'name', title: 'Name', type: 'text', sorted: true},\r\n            {name: 'description', title: 'Description', type: 'text', sorted: true},\r\n            {name: 'unit', title: 'Unit', type: 'text', width: 30},\r\n            {name: 'type', title: 'Type', type: 'select', options: types, sorted: true},\r\n            {name: 'len', title: 'Length', type: 'text', width: 20},\r\n            {name: 'factor', title: 'Factor', type: 'text', width: 20, expert: true},\r\n            {name: 'offset', title: 'Offset', type: 'text', width: 20},\r\n            {name: 'formula', title: 'Formula', type: 'text', formulaDisabled: true},\r\n            {name: 'role', title: 'Role', type: 'select', options: roles, sorted: true},\r\n            {name: 'room', title: 'Room', type: 'rooms'},\r\n            {name: 'cw', title: 'CW', type: 'checkbox', tooltip: 'Cyclic write'},\r\n            {name: 'isScale', title: 'SF', type: 'checkbox', tooltip: 'Store this value as scaling factor', expert: true, formulaDisabled: true},\r\n        ]\r\n\r\n        if (this.props.native.params.multiDeviceId) {\r\n            result.splice(1, 0,\r\n                {name: 'deviceId', title: 'Slave ID', type: 'number', sorted: true, width: 20},\r\n            );\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    addItem = () => {\r\n        let data = JSON.parse(JSON.stringify(this.props.native[this.nativeField]));\r\n        let newItem = {}\r\n        this.getFields().forEach(field => newItem[field.name] = '')\r\n        if (data.length) {\r\n            let sortedData = JSON.parse(JSON.stringify(data));\r\n            sortedData.sort((item1, item2) => item1._address > item2._address ? 1 : -1);\r\n            let lastItem = sortedData[sortedData.length - 1];\r\n            newItem._address = parseInt(lastItem._address) + (lastItem.len ? parseInt(lastItem.len) : 1);\r\n            newItem.deviceId = lastItem.deviceId;\r\n            newItem.type = lastItem.type;\r\n            newItem.len = lastItem.len;\r\n            newItem.factor = lastItem.factor;\r\n            newItem.offset = lastItem.offset;\r\n            newItem.formula = lastItem.formula;\r\n            newItem.role = lastItem.role;\r\n            newItem.cw = lastItem.cw;\r\n            newItem.isScale = lastItem.isScale;\r\n        } else {\r\n            newItem.role = 'level';\r\n            newItem.factor = 1;\r\n            newItem.offset = 0;\r\n            newItem._address = this.props.native.params.showAliases ? 30001 : 0;\r\n        }\r\n        data.push(newItem);\r\n        this.props.onChange(this.nativeField, data);\r\n    }\r\n\r\n    getDisable = (index, name) => {\r\n        if (name === 'len') {\r\n            if (!['string', 'stringle'].includes(this.props.native[this.nativeField][index].type)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    changeParam = (index, name, value) => {\r\n        let data = JSON.parse(JSON.stringify(this.props.native[this.nativeField]));\r\n        data[index][name] = value;\r\n        if (name === 'type') {\r\n            if (['', 'uint16be', 'uint16le', 'int16be', 'int16le', 'uint8be', 'uint8le', 'int8be', 'int8le'].includes(value)) {\r\n                data[index].len = 1;\r\n            }\r\n            if (['uint32be', 'uint32le', 'uint32sw', 'uint32sb', 'int32be', 'int32le', 'int32sw', 'int32sb', 'floatbe', 'floatle', 'floatsw', 'floatsb', 'string', 'stringle'].includes(value)) {\r\n                data[index].len = 2;\r\n            }\r\n            if (['uint64be', 'uint64le', 'doublebe', 'doublele'].includes(value)) {\r\n                data[index].len = 4;\r\n            }\r\n        }\r\n        this.props.onChange(this.nativeField, data);\r\n    }\r\n}\r\n\r\nInputRegisters.propTypes = {\r\n    common: PropTypes.object.isRequired,\r\n    native: PropTypes.object.isRequired,\r\n    instance: PropTypes.number.isRequired,\r\n    adapterName: PropTypes.string.isRequired,\r\n    onError: PropTypes.func,\r\n    onLoad: PropTypes.func,\r\n    onChange: PropTypes.func,\r\n    changed: PropTypes.bool,\r\n    socket: PropTypes.object.isRequired,\r\n    rooms: PropTypes.object,\r\n};\r\n\r\nexport default InputRegisters;\r\n","import PropTypes from 'prop-types';\r\n\r\nimport BaseRegisters from './BaseRegisters';\r\n\r\nimport roles from '../data/roles';\r\nimport types from '../data/types';\r\n\r\nclass HoldingRegisters extends BaseRegisters {\r\n    nativeField = 'holdingRegs';\r\n\r\n    getFields() {\r\n        //let rooms = this.getRooms();\r\n        //rooms.unshift({value: '', title: ''});\r\n\r\n        let result = [\r\n            {name: '_address', title: 'Address', type: 'number', sorted: true, width: 20},\r\n            {name: 'name', title: 'Name', type: 'text', sorted: true},\r\n            {name: 'description', title: 'Description', type: 'text', sorted: true},\r\n            {name: 'unit', title: 'Unit', type: 'text', width: 30},\r\n            {name: 'type', title: 'Type', type: 'select', options: types, sorted: true},\r\n            {name: 'len', title: 'Length', type: 'text', width: 20},\r\n            {name: 'factor', title: 'Factor', type: 'text', width: 20, expert: true},\r\n            {name: 'offset', title: 'Offset', type: 'text', width: 20, expert: true},\r\n            {name: 'formula', title: 'Formula', type: 'text', expert: true, formulaDisabled: true},\r\n            {name: 'role', title: 'Role', type: 'select', options: roles, sorted: true},\r\n            {name: 'room', title: 'Room', type: 'rooms'},\r\n            {name: 'poll', title: 'Poll', type: 'checkbox', tooltip: 'Enable polling of data point'},\r\n            {name: 'wp', title: 'WP', type: 'checkbox', tooltip: 'Write pulses (true → false edge)', expert: true},\r\n            {name: 'cw', title: 'CW', type: 'checkbox', tooltip: 'Cyclic write'},\r\n            {name: 'isScale', title: 'SF', type: 'checkbox', tooltip: 'Store this value as scaling factor', expert: true, formulaDisabled: true},\r\n        ];\r\n\r\n        if (this.props.native.params.multiDeviceId) {\r\n            result.splice(1, 0,\r\n                {name: 'deviceId', title: 'Slave ID', type: 'number', sorted: true, width: 20},\r\n            );\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    addItem = () => {\r\n        let data = JSON.parse(JSON.stringify(this.props.native[this.nativeField]));\r\n        let newItem = {}\r\n        this.getFields().forEach(field => newItem[field.name] = '');\r\n        if (data.length) {\r\n            let sortedData = JSON.parse(JSON.stringify(data));\r\n            sortedData.sort((item1, item2) => item1._address > item2._address ? 1 : -1);\r\n            let lastItem = sortedData[sortedData.length - 1];\r\n            newItem._address = parseInt(lastItem._address) + (lastItem.len ? parseInt(lastItem.len) : 1);\r\n            newItem.deviceId = lastItem.deviceId;\r\n            newItem.type = lastItem.type;\r\n            newItem.len = (lastItem.len ? parseInt(lastItem.len) : 1);\r\n            newItem.factor = lastItem.factor;\r\n            newItem.offset = lastItem.offset;\r\n            newItem.formula = lastItem.formula;\r\n            newItem.role = lastItem.role;\r\n            newItem.poll = lastItem.poll;\r\n            newItem.wp = lastItem.wp;\r\n            newItem.cw = lastItem.cw;\r\n            newItem.isScale = lastItem.isScale;\r\n        } else {\r\n            newItem.role = 'level';\r\n            newItem.factor = 1;\r\n            newItem.offset = 0;\r\n            newItem._address = this.props.native.params.showAliases ? 40001 : 0;\r\n        }\r\n        data.push(newItem);\r\n        this.props.onChange(this.nativeField, data);\r\n    }\r\n\r\n    getDisable = (index, name) => {\r\n        return name === 'len' &&\r\n            !['string', 'stringle'].includes(this.props.native[this.nativeField][index].type);\r\n    }\r\n\r\n    changeParam = (index, name, value) => {\r\n        let data = JSON.parse(JSON.stringify(this.props.native[this.nativeField]));\r\n        data[index][name] = value;\r\n        if (name === 'type') {\r\n            if (['', 'uint16be', 'uint16le', 'int16be', 'int16le', 'uint8be', 'uint8le', 'int8be', 'int8le'].includes(value)) {\r\n                data[index].len = 1;\r\n            } else\r\n            if (['uint32be', 'uint32le', 'uint32sw', 'uint32sb', 'int32be', 'int32le', 'int32sw', 'int32sb', 'floatbe', 'floatle', 'floatsw', 'floatsb', 'string', 'stringle'].includes(value)) {\r\n                data[index].len = 2;\r\n            } else\r\n            if (['uint64be', 'uint64le', 'doublebe', 'doublele'].includes(value)) {\r\n                data[index].len = 4;\r\n            }\r\n        }\r\n        this.props.onChange(this.nativeField, data);\r\n    }\r\n}\r\n\r\nHoldingRegisters.propTypes = {\r\n    common: PropTypes.object.isRequired,\r\n    native: PropTypes.object.isRequired,\r\n    instance: PropTypes.number.isRequired,\r\n    adapterName: PropTypes.string.isRequired,\r\n    onError: PropTypes.func,\r\n    onLoad: PropTypes.func,\r\n    onChange: PropTypes.func,\r\n    changed: PropTypes.bool,\r\n    socket: PropTypes.object.isRequired,\r\n    rooms: PropTypes.object,\r\n};\r\n\r\nexport default HoldingRegisters;\r\n","import PropTypes from 'prop-types';\r\n\r\nimport roles from '../data/roles';\r\n\r\nimport BaseRegisters from './BaseRegisters';\r\n\r\nclass DiscreteInputs extends BaseRegisters {\r\n    nativeField = 'disInputs';\r\n\r\n    getFields() {\r\n        let result = [\r\n            {name: '_address', title: 'Address', type: 'number', sorted: true, width: 20},\r\n            {name: 'name', title: 'Name', type: 'text', sorted: true},\r\n            {name: 'description', title: 'Description', type: 'text', sorted: true},\r\n            {name: 'formula', title: 'Formula', type: 'text', expert: true, formulaDisabled: true},\r\n            {name: 'role', title: 'Role', type: 'select', options: roles, sorted: true},\r\n            {name: 'room', title: 'Room', type: 'rooms'},\r\n            {name: 'cw', title: 'CW', type: 'checkbox', tooltip: 'Cyclic write'},\r\n            {name: 'isScale', title: 'SF', type: 'checkbox', tooltip: 'Store this value as scaling factor', expert: true, formulaDisabled: true},\r\n        ];\r\n\r\n        if (this.props.native.params.multiDeviceId) {\r\n            result.splice(1, 0,\r\n                {name: 'deviceId', title: 'Slave ID', type: 'number', sorted: true, width: 20},\r\n            );\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    addItem = () => {\r\n        let data = JSON.parse(JSON.stringify(this.props.native[this.nativeField]));\r\n        let newItem = {}\r\n        this.getFields().forEach(field => newItem[field.name] = '')\r\n        if (data.length) {\r\n            let sortedData = JSON.parse(JSON.stringify(data));\r\n            sortedData.sort((item1, item2) => item1._address > item2._address ? 1 : -1);\r\n            let lastItem = sortedData[sortedData.length - 1];\r\n            newItem._address = parseInt(lastItem._address) + 1;\r\n            newItem.deviceId = lastItem.deviceId;\r\n            newItem.formula = lastItem.formula;\r\n            newItem.role = lastItem.role;\r\n            newItem.cw = lastItem.cw;\r\n            newItem.isScale = lastItem.isScale;\r\n        } else {\r\n            newItem.role = 'level';\r\n            newItem._address = this.props.native.params.showAliases ? 10001 : 0;\r\n        }\r\n        data.push(newItem);\r\n        this.props.onChange(this.nativeField, data);\r\n    }\r\n}\r\n\r\nDiscreteInputs.propTypes = {\r\n    common: PropTypes.object.isRequired,\r\n    native: PropTypes.object.isRequired,\r\n    instance: PropTypes.number.isRequired,\r\n    adapterName: PropTypes.string.isRequired,\r\n    onError: PropTypes.func,\r\n    onLoad: PropTypes.func,\r\n    onChange: PropTypes.func,\r\n    changed: PropTypes.bool,\r\n    socket: PropTypes.object.isRequired,\r\n    rooms: PropTypes.object,\r\n};\r\n\r\nexport default DiscreteInputs;\r\n","import PropTypes from 'prop-types';\r\n\r\nimport roles from '../data/roles';\r\n\r\nimport BaseRegisters from './BaseRegisters';\r\n\r\nclass Coils extends BaseRegisters {\r\n    nativeField = 'coils';\r\n\r\n    getFields() {\r\n        let result = [\r\n            {name: '_address', title: 'Address', type: 'number', sorted: true, width: 20},\r\n            {name: 'name', title: 'Name', type: 'text', sorted: true},\r\n            {name: 'description', title: 'Description', type: 'text', sorted: true},\r\n            {name: 'formula', title: 'Formula', type: 'text', expert: true, formulaDisabled: true},\r\n            {name: 'role', title: 'Role', type: 'select', options: roles, sorted: true},\r\n            {name: 'room', title: 'Room', type: 'rooms'},\r\n            {name: 'poll', title: 'Poll', type: 'checkbox'},\r\n            {name: 'wp', title: 'WP', type: 'checkbox', expert: true},\r\n            {name: 'cw', title: 'CW', type: 'checkbox'},\r\n            {name: 'isScale', title: 'SF', type: 'checkbox', tooltip: 'Store this value as scaling factor', expert: true, formulaDisabled: true},\r\n        ]\r\n\r\n        if (this.props.native.params.multiDeviceId) {\r\n            result.splice(1, 0,\r\n                {name: 'deviceId', title: 'Slave ID', type: 'number', sorted: true, width: 20},\r\n            );\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    addItem = () => {\r\n        let data = JSON.parse(JSON.stringify(this.props.native[this.nativeField]));\r\n        let newItem = {}\r\n        this.getFields().forEach(field => newItem[field.name] = '')\r\n        if (data.length) {\r\n            let sortedData = JSON.parse(JSON.stringify(data));\r\n            sortedData.sort((item1, item2) => item1._address > item2._address ? 1 : -1);\r\n            let lastItem = sortedData[sortedData.length - 1];\r\n            newItem._address = parseInt(lastItem._address) + 1;\r\n            newItem.deviceId = lastItem.deviceId;\r\n            newItem.formula = lastItem.formula;\r\n            newItem.role = lastItem.role;\r\n            newItem.poll = lastItem.poll;\r\n            newItem.wp = lastItem.wp;\r\n            newItem.cw = lastItem.cw;\r\n            newItem.isScale = lastItem.isScale;\r\n        } else {\r\n            newItem.role = 'level';\r\n        }\r\n        data.push(newItem);\r\n        this.props.onChange(this.nativeField, data);\r\n    }\r\n}\r\n\r\nCoils.propTypes = {\r\n    common: PropTypes.object.isRequired,\r\n    native: PropTypes.object.isRequired,\r\n    instance: PropTypes.number.isRequired,\r\n    adapterName: PropTypes.string.isRequired,\r\n    onError: PropTypes.func,\r\n    onLoad: PropTypes.func,\r\n    onChange: PropTypes.func,\r\n    changed: PropTypes.bool,\r\n    socket: PropTypes.object.isRequired,\r\n    rooms: PropTypes.object,\r\n};\r\n\r\nexport default Coils;\r\n","import React from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport { MuiThemeProvider } from '@material-ui/core/styles';\r\nimport { SnackbarProvider } from 'notistack';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\nimport {AiOutlineFieldBinary as BinaryIcon} from 'react-icons/all';\r\nimport {TiSortNumerically as DigitsIcon} from 'react-icons/all';\r\n\r\nimport GenericApp from '@iobroker/adapter-react/GenericApp';\r\nimport Loader from '@iobroker/adapter-react/Components/Loader'\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\n\r\nimport TabOptions from './Tabs/Options';\r\nimport TabInputRegisters from './Tabs/InputRegisters';\r\nimport TabHoldingRegisters from './Tabs/HoldingRegisters';\r\nimport TabDiscreteInputs from './Tabs/DiscreteInputs';\r\nimport TabCoils from './Tabs/Coils';\r\n\r\nconst styles = theme => ({\r\n    root: {},\r\n    tabContent: {\r\n        padding: 10,\r\n        height: 'calc(100% - 64px - 48px - 20px)',\r\n        overflow: 'auto',\r\n    },\r\n    tabContentIFrame: {\r\n        padding: 10,\r\n        height: 'calc(100% - 64px - 48px - 20px - 38px)',\r\n        overflow: 'auto'\r\n    },\r\n    tab: {\r\n        width: '100%',\r\n        minHeight: '100%'\r\n    }\r\n});\r\n\r\nconst tabs = [\r\n    {\r\n        name: 'general',\r\n        title: 'General',\r\n        component: TabOptions,\r\n    },\r\n    {\r\n        name: 'discrete-inputs',\r\n        title: 'Discrete inputs',\r\n        component: TabDiscreteInputs,\r\n        icon: <BinaryIcon style={{width: 18, height: 18, marginRight: 4, display: 'inline-block'}}/>,\r\n        tooltip: 'Binary inputs (read-only)'\r\n    },\r\n    {\r\n        name: 'coils',\r\n        title: 'Coils',\r\n        component: TabCoils,\r\n        icon: <BinaryIcon style={{width: 18, height: 18, marginRight: 4, display: 'inline-block'}}/>,\r\n        tooltip: 'Binary inputs and outputs'\r\n    },\r\n    {\r\n        name: 'input-registers',\r\n        title: 'Input Registers',\r\n        component: TabInputRegisters,\r\n        icon: <DigitsIcon style={{width: 18, height: 18, marginRight: 4, display: 'inline-block'}}/>,\r\n        tooltip: 'Input registers (8-64 bit values, read-only)'\r\n    },\r\n    {\r\n        name: 'holding-registers',\r\n        title: 'Holding Registers',\r\n        component: TabHoldingRegisters,\r\n        icon: <DigitsIcon style={{width: 18, height: 18, marginRight: 4, display: 'inline-block'}}/>,\r\n        tooltip: 'Input/output registers (8-64 bit values)'\r\n    },\r\n]\r\n\r\nclass App extends GenericApp {\r\n    constructor(props) {\r\n        // TODO: delete it after adapter-react 1.0.27 (BF: 2021.06.09)\r\n        if (window.io && window.location.port === '3000') {\r\n            console.log('Reaload!');\r\n            delete window.io;\r\n            window.io = new window.SocketClient();\r\n        }\r\n        const extendedProps = {...props};\r\n        extendedProps.encryptedFields = ['pass'];\r\n\r\n        extendedProps.translations = {\r\n            'en': require('./i18n/en'),\r\n            'de': require('./i18n/de'),\r\n            'ru': require('./i18n/ru'),\r\n            'pt': require('./i18n/pt'),\r\n            'nl': require('./i18n/nl'),\r\n            'fr': require('./i18n/fr'),\r\n            'it': require('./i18n/it'),\r\n            'es': require('./i18n/es'),\r\n            'pl': require('./i18n/pl'),\r\n            'zh-cn': require('./i18n/zh-cn'),\r\n        };\r\n\r\n        super(props, extendedProps);\r\n        this.state.moreLoaded = false;\r\n        this.state.rooms = null;\r\n    }\r\n\r\n    onConnectionReady() {\r\n        super.onConnectionReady();\r\n        this.socket.getEnums('rooms')\r\n            .then(rooms =>\r\n                this.setState({moreLoaded: true, rooms}));\r\n    }\r\n\r\n    getSelectedTab() {\r\n        const selectedTab = this.state.selectedTab;\r\n        if (!selectedTab) {\r\n            return 0;\r\n        } else {\r\n            return tabs.findIndex(tab => tab.name === selectedTab);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.loaded || !this.state.moreLoaded) {\r\n            return <MuiThemeProvider theme={this.state.theme}>\r\n                <Loader theme={this.state.themeType} />\r\n            </MuiThemeProvider>;\r\n        }\r\n\r\n        return <MuiThemeProvider theme={this.state.theme}>\r\n            <SnackbarProvider>\r\n                <div className=\"App\" style={{background: this.state.theme.palette.background.default, color: this.state.theme.palette.text.primary}}>\r\n                    <AppBar position=\"static\">\r\n                        <Tabs\r\n                            value={this.getSelectedTab()}\r\n                            onChange={(e, index) => this.selectTab(tabs[index].name, index)}\r\n                            variant=\"scrollable\" scrollButtons=\"auto\">\r\n                            {tabs.map(tab => {\r\n                                return <Tab\r\n                                    label={tab.icon ? <>{tab.icon}{I18n.t(tab.title)}</> : I18n.t(tab.title)}\r\n                                    data-name={tab.name}\r\n                                    key={tab.name}\r\n                                    title={tab.tooltip ? I18n.t(tab.tooltip) : undefined}\r\n                                />\r\n                            })}\r\n                        </Tabs>\r\n                    </AppBar>\r\n                    <div className={this.isIFrame ? this.props.classes.tabContentIFrame : this.props.classes.tabContent}>\r\n                        {tabs.map((tab, index) => {\r\n                            const TabComponent = tab.component;\r\n                            if (this.state.selectedTab) {\r\n                                if (this.state.selectedTab !== tab.name) {\r\n                                    return null;\r\n                                }\r\n                            } else {\r\n                                if (index !== 0) {\r\n                                    return null;\r\n                                }\r\n                            }\r\n                            return <TabComponent\r\n                                key={tab.name}\r\n                                formulaDisabled={this.state.native.params.slave === '1' || this.state.native.params.slave === 1}\r\n                                common={this.common}\r\n                                socket={this.socket}\r\n                                native={this.state.native}\r\n                                onError={text => this.setState({errorText: (text || text === 0) && typeof text !== 'string' ? text.toString() : text})}\r\n                                onLoad={native => this.onLoadConfig(native)}\r\n                                instance={this.instance}\r\n                                adapterName={this.adapterName}\r\n                                changed={this.state.changed}\r\n                                onChange={(attr, value, cb) => this.updateNativeValue(attr, value, cb)}\r\n                                changeNative={(value) => this.setState({native: value, changed: this.getIsChanged(value)})}\r\n                                rooms={this.state.rooms}\r\n                            />\r\n                        })}\r\n                    </div>\r\n                    {this.renderError()}\r\n                    {this.renderSaveCloseButtons()}\r\n                </div>\r\n            </SnackbarProvider>\r\n        </MuiThemeProvider>;\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport * as Sentry from '@sentry/browser';\r\nimport * as SentryIntegrations from '@sentry/integrations';\r\nimport { MuiThemeProvider} from '@material-ui/core/styles';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {version} from '../package.json';\r\nimport theme from '@iobroker/adapter-react/Theme';\r\nimport Utils from '@iobroker/adapter-react/Components/Utils';\r\n\r\nwindow.adapterName = 'modbus';\r\nlet themeName = Utils.getThemeName();\r\n\r\nconsole.log(`iobroker.${window.adapterName}@${version} using theme \"${themeName}\"`);\r\n\r\nfunction build() {\r\n    return ReactDOM.render(\r\n        <MuiThemeProvider theme={theme(themeName)}>\r\n            <App\r\n                onThemeChange={_theme => {\r\n                    themeName = _theme;\r\n                    build();\r\n                }}\r\n            />\r\n        </MuiThemeProvider>,\r\n        document.getElementById('root')\r\n    );\r\n}\r\n\r\nif (false && window.location.host !== 'localhost:3000') {\r\n    Sentry.init({\r\n        dsn: 'https://5ad729dbed504d15aa8bde423cae9a8e@sentry.iobroker.net/57',\r\n        release: `iobroker.${window.adapterName}@${version}`,\r\n        integrations: [\r\n            new SentryIntegrations.Dedupe()\r\n        ]\r\n    });\r\n}\r\n\r\nbuild();\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}