{"version":3,"sources":["Components/Utils.js","Tabs/Options.js","Components/TsvDialog.js","Components/DeleteAllDialog.js","Components/DeleteDialog.js","Components/RegisterTable.js","Tabs/BaseRegisters.js","Tabs/InputRegisters.js","Tabs/HoldingRegisters.js","Tabs/DiscreteInputs.js","Tabs/Coils.js","App.js","serviceWorker.js","index.js"],"names":["_rmap","0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","_dmap","offsets","coils","disInputs","inputRegs","holdingRegs","Utils","address2alias","regType","address","parseInt","alias2address","alias","nonDirect2direct","Math","floor","direct2nonDirect","Options","props","inputDisabled","input","name","native","params","type","showAliases","slave","onlyUseWriteMultipleRegisters","doNotUseWriteMultipleRegisters","inputDisplay","includes","changeParam","value","JSON","parse","stringify","multiDeviceId","readIPs","readPorts","forEach","nativeParam","item","_address","directAddresses","changeNative","state","ports","customPort","ips","this","socket","getState","adapterName","instance","then","val","sendTo","list","error","console","length","path","warn","map","title","manufacturer","comName","find","setState","catch","e","getIpAddresses","common","host","ip","unshift","inputs","Paper","className","classes","optionsContainer","Typography","variant","gutterBottom","header","I18n","t","FormControl","optionContainer","FormControlLabel","label","control","Checkbox","optionsCheckbox","disabled","checked","onChange","target","help","FormHelperText","helperText","dimension","Box","InputLabel","Select","optionsSelect","options","option","MenuItem","TextField","optionsTextfield","InputProps","endAdornment","InputAdornment","position","IconButton","onClick","tab","Grid","container","spacing","xs","md","optionsGrid","getInputsBlock","connectionInputs","generalInputs","Component","withStyles","theme","width","display","alignItems","paddingTop","paddingBottom","marginTop","marginLeft","marginBottom","padding","textAlign","fontSize","tsvEditor","height","tsvEditorTextarea","fontFamily","useState","tsv","setTsv","useEffect","tsvResult","push","fields","field","data","undefined","toString","json2tsv","open","enqueueSnackbar","useSnackbar","Dialog","onClose","maxWidth","fullWidth","DialogTitle","DialogContent","DialogContentText","showPrintMargin","setOptions","firstLineNumber","mode","DialogActions","Button","color","copy","startIcon","tsv2json","shift","success","errors","index","itemValues","itemIndex","save","DeleteAllDialog","action","DeleteDialog","disableWarnings","setDisableWarnings","DataCell","result","sortedItem","editMode","setEditMode","ref","useRef","Tooltip","inputRef","tableCheckbox","getDisable","$index","rooms","allowNone","dense","themeType","inputProps","tableSelect","tableSelectContainer","tableTextFieldContainer","tableTextField","TableCell","clsx","tableCell","nonEditMode","window","localStorage","setItem","setTimeout","current","focus","tableHeader","whiteSpace","fontWeight","tableHeaderExtended","palette","primary","light","dark","tableContainer","overflow","maxHeight","cursor","tsvDialogOpen","setTsvDialogOpen","getItem","extendedMode","setExtendedMode","deleteAllDialog","setDeleteAllDialog","deleteDialog","setDeleteDialog","sortedData","getSortedData","orderBy","order","addItem","Table","size","stickyHeader","TableHead","TableRow","filter","expert","formulaDisabled","isChecked","indeterminate","trueFound","falseFound","k","style","tooltip","newData","changeData","sorted","TableSortLabel","active","direction","isAsc","onChangeOrder","TableBody","hover","lastTime","sessionStorage","Date","deleteItem","disableDialogs","toISOString","BaseRegisters","nativeField","addressToCanonical","newItem","getFields","splice","sort","sortedItem1","sortedItem2","sort1","sort2","deviceId","showExtendedModeSwitch","isShowExtendedModeSwitch","InputRegisters","lastItem","len","factor","offset","formula","role","cw","isScale","types","roles","propTypes","PropTypes","object","isRequired","number","string","onError","func","onLoad","changed","bool","HoldingRegisters","poll","wp","DiscreteInputs","Coils","tabs","component","TabOptions","TabDiscreteInputs","icon","marginRight","TabCoils","TabInputRegisters","TabHoldingRegisters","App","io","location","port","log","SocketClient","extendedProps","encryptedFields","translations","require","moreLoaded","getEnums","selectedTab","findIndex","loaded","background","default","text","AppBar","Tabs","getSelectedTab","selectTab","scrollButtons","Tab","data-name","isIFrame","tabContentIFrame","tabContent","TabComponent","errorText","onLoadConfig","attr","cb","updateNativeValue","getIsChanged","renderError","renderSaveCloseButtons","GenericApp","root","minHeight","Boolean","hostname","match","themeName","getThemeName","version","build","ReactDOM","render","onThemeChange","_theme","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d7abc890.chunk.js","sourcesContent":["const _rmap = {\r\n    0: 15,\r\n    1: 14,\r\n    2: 13,\r\n    3: 12,\r\n    4: 11,\r\n    5: 10,\r\n    6: 9,\r\n    7: 8,\r\n    8: 7,\r\n    9: 6,\r\n    10: 5,\r\n    11: 4,\r\n    12: 3,\r\n    13: 2,\r\n    14: 1,\r\n    15: 0\r\n};\r\nconst _dmap = {\r\n    0: 0,\r\n    1: 1,\r\n    2: 2,\r\n    3: 3,\r\n    4: 4,\r\n    5: 5,\r\n    6: 6,\r\n    7: 7,\r\n    8: 8,\r\n    9: 9,\r\n    10: 10,\r\n    11: 11,\r\n    12: 12,\r\n    13: 13,\r\n    14: 14,\r\n    15: 15\r\n};\r\n\r\nconst offsets = {\r\n    coils: 1,\r\n    disInputs: 10001,\r\n    inputRegs: 30001,\r\n    holdingRegs: 40001,\r\n};\r\n\r\nfunction address2alias(regType, address) {\r\n    return parseInt(address, 10) + offsets[regType];\r\n}\r\n\r\nfunction alias2address(regType, alias) {\r\n    return parseInt(alias, 10) - offsets[regType];\r\n}\r\n\r\nfunction nonDirect2direct(regType, address) {\r\n    if (regType === 'disInputs' || regType === 'coils') {\r\n        address = parseInt(address, 10) || 0;\r\n        address = Math.floor(address / 16) * 16 + _dmap[address % 16];\r\n    }\r\n\r\n    return address;\r\n}\r\n\r\nfunction direct2nonDirect(regType, address) {\r\n    if (regType === 'disInputs' || regType === 'coils') {\r\n        address = parseInt(address, 10) || 0;\r\n        address = Math.floor(address / 16) * 16 + _rmap[address % 16];\r\n        return address;\r\n    } else {\r\n        return address;\r\n    }\r\n}\r\n\r\nconst Utils = {\r\n    address2alias,\r\n    alias2address,\r\n    nonDirect2direct,\r\n    direct2nonDirect\r\n};\r\n\r\nexport default Utils;","import {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {withStyles} from '@material-ui/core/styles';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport Utils from '../Components/Utils';\r\n\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\n\r\nimport connectionInputs from '../data/optionsConnection';\r\nimport generalInputs from '../data/optionsGeneral';\r\n\r\nconst styles = theme => ({\r\n    optionsSelect: {\r\n        width: 280\r\n    },\r\n    optionsTextfield: {\r\n        width: 280\r\n    },\r\n    optionContainer: {\r\n        display: 'flex',\r\n        alignItems: 'start',\r\n        paddingTop: 4,\r\n        paddingBottom: 4\r\n    },\r\n    helperText: {\r\n        marginTop: -8,\r\n        marginLeft: 32,\r\n        marginBottom: 10\r\n    },\r\n    optionsContainer: {\r\n        width: `calc(100% - ${theme.spacing(4)}px)`,\r\n        padding: theme.spacing(2),\r\n        display: 'inline-block',\r\n        textAlign: 'left'\r\n    },\r\n    optionsGrid: {\r\n        textAlign: 'center',\r\n        padding: theme.spacing(2),\r\n    },\r\n    header: {\r\n        fontSize: 24,\r\n    }\r\n});\r\n\r\nclass Options extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ports: null,\r\n            customPort: false,\r\n            ips: null,\r\n        };\r\n    }\r\n\r\n    readPorts() {\r\n        return this.props.socket.getState(`system.adapter.${this.props.adapterName}.${this.props.instance}.alive`)\r\n            .then(state => {\r\n                if (state && state.val) {\r\n                    return this.props.socket.sendTo(this.props.adapterName + '.' + this.props.instance, 'listUart', null)\r\n                        .then(list => {\r\n                            if (list && list.error) {\r\n                                console.error('Cannot read ports: ' + list.error);\r\n                            } else\r\n                            if (list && list.length === 1 && list[0] && list[0].path === 'Not available') {\r\n                                console.warn('Cannot read ports');\r\n                            } else {\r\n                                const ports = list.map(item => ({value: item.path, title: item.path + (item.manufacturer ? ' [' + item.manufacturer + ']' : '')}));\r\n                                const customPort = this.props.native.params.comName && !ports.find(item => item.value === this.props.native.params.comName);\r\n\r\n                                this.setState({ports, customPort});\r\n                            }\r\n                        })\r\n                        .catch(e => console.error('Cannot read ports: ' + e));\r\n                }\r\n            })\r\n            .catch(e => console.error('Cannot read alive: ' + e));\r\n    }\r\n\r\n    readIPs() {\r\n        return this.props.socket.getIpAddresses(this.props.common.host)\r\n            .then(ips => {\r\n                ips = ips || [];\r\n                ips = ips.map(ip => ({value: ip, title: ip}));\r\n                ips.unshift({value: '0.0.0.0', title: 'Listen on all IPs'});\r\n                ips.unshift({value: '127.0.0.1', title: '127.0.0.1 (Localhost)'});\r\n                this.setState({ips});\r\n            })\r\n            .catch(e => console.error('Cannot read IP addresses: ' + e));\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.native.params.type === 'serial') {\r\n            this.readPorts();\r\n        }\r\n        if (this.props.native.params.type !== 'serial' && (this.props.native.params.slave === '1' || this.props.native.params.slave === 1)) {\r\n            this.readIPs();\r\n        }\r\n    }\r\n\r\n    inputDisabled = input => {\r\n        if (input.name === 'slave' && this.props.native.params.type !== 'tcp') {\r\n            return true;\r\n        } else\r\n        if (input.name === 'directAddresses' && !this.props.native.params.showAliases) {\r\n            return true;\r\n        } else\r\n        if (input.name === 'multiDeviceId' && (this.props.native.params.slave === '1' || this.props.native.params.slave === 1)) {\r\n            return true;\r\n        } else\r\n        if (input.name === 'doNotUseWriteMultipleRegisters' && this.props.native.params.onlyUseWriteMultipleRegisters) {\r\n            return true;\r\n        } else\r\n        if (input.name === 'onlyUseWriteMultipleRegisters' && this.props.native.params.doNotUseWriteMultipleRegisters) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    inputDisplay = input => {\r\n        if (['tcp', 'tcprtu'].includes(this.props.native.params.type)) {\r\n            if (['comName', 'baudRate', 'dataBits', 'stopBits', 'parity'].includes(input.name)) {\r\n                return false;\r\n            }\r\n        } else {\r\n            if (['bind', 'port'].includes(input.name)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    getInputsBlock(inputs, title) {\r\n        return <><Paper className={this.props.classes.optionsContainer}>\r\n            <Typography variant=\"h4\" gutterBottom className={this.props.classes.header}>{I18n.t(title)}</Typography>\r\n            {inputs.map(input => {\r\n                if (!this.inputDisplay(input)) {\r\n                    return null;\r\n                } else if (input.name === 'bind' && this.props.native.params.type !== 'serial' && (this.props.native.params.slave === '1' || this.props.native.params.slave === 1)) {\r\n                    return <Box className={this.props.classes.optionContainer} key={input.name}>\r\n                        {this.state.ips ?\r\n                            <FormControl>\r\n                                <InputLabel>{I18n.t('Slave IP address')}</InputLabel>\r\n                                <Select\r\n                                    className={this.props.classes.optionsSelect}\r\n                                    disabled={this.inputDisabled(input)}\r\n                                    value={this.props.native.params[input.name] || ''}\r\n                                    onChange={e => this.changeParam(input.name, e.target.value)}\r\n                                >\r\n                                    {this.state.ips.map(option =>\r\n                                        <MenuItem key={option.value} value={option.value}>{option.title}</MenuItem>\r\n                                    )}\r\n                                </Select>\r\n                            </FormControl>\r\n                            :\r\n                            <TextField\r\n                                type={input.type}\r\n                                label={I18n.t('Slave IP address')}\r\n                                className={this.props.classes.optionsTextfield}\r\n                                disabled={this.inputDisabled(input)}\r\n                                helperText={input.help ? I18n.t(input.help) : ''}\r\n                                value={this.props.native.params[input.name]}\r\n                                InputProps={{endAdornment: input.dimension ? <InputAdornment position=\"end\">{I18n.t(input.dimension)}</InputAdornment> : null}}\r\n                                onChange={e => this.changeParam(input.name, e.target.value)}\r\n                            />}\r\n                    </Box>;\r\n                }\r\n                if (input.type === 'checkbox') {\r\n                    return <FormControl className={this.props.classes.optionContainer} key={input.name}>\r\n                        <FormControlLabel\r\n                            label={I18n.t(input.title)}\r\n                            control={<Checkbox\r\n                                label={I18n.t(input.title)}\r\n                                className={this.props.classes.optionsCheckbox}\r\n                                disabled={this.inputDisabled(input)}\r\n                                checked={this.props.native.params[input.name]}\r\n                                onChange={e => this.changeParam(input.name, e.target.checked)}\r\n                            />}\r\n                        />\r\n                        {input.help ? <FormHelperText className={this.props.classes.helperText}>{I18n.t(input.help)}</FormHelperText> : null}\r\n                        {input.dimension ? I18n.t(input.dimension) : null}\r\n                    </FormControl>;\r\n                } else if (input.type === 'select') {\r\n                    return <Box className={this.props.classes.optionContainer} key={input.name}>\r\n                        <FormControl>\r\n                            <InputLabel>{I18n.t(input.title)}</InputLabel>\r\n                            <Select\r\n                                className={this.props.classes.optionsSelect}\r\n                                disabled={this.inputDisabled(input)}\r\n                                value={this.props.native.params[input.name] || ''}\r\n                                onChange={e => this.changeParam(input.name, e.target.value)}\r\n                            >\r\n                                {input.options.map(option =>\r\n                                    <MenuItem key={option.value} value={option.value}>{option.title}</MenuItem>\r\n                                )}\r\n                            </Select>\r\n                        </FormControl> {input.dimension ? I18n.t(input.dimension) : null}\r\n                    </Box>;\r\n                }  else if (input.type === 'ports') {\r\n                    return <Box className={this.props.classes.optionContainer} key={input.name}>\r\n                        {this.state.ports && !this.state.customPort ?\r\n                            <FormControl>\r\n                                <InputLabel>{I18n.t(input.title)}</InputLabel>\r\n                                <Select\r\n                                    className={this.props.classes.optionsSelect}\r\n                                    disabled={this.inputDisabled(input)}\r\n                                    value={this.props.native.params[input.name] || ''}\r\n                                    onChange={e => this.changeParam(input.name, e.target.value)}\r\n                                >\r\n                                    {this.state.ports.map(option =>\r\n                                        <MenuItem key={option.value} value={option.value}>{option.title}</MenuItem>\r\n                                    )}\r\n                                </Select>\r\n                            </FormControl>\r\n                            :\r\n                            <TextField\r\n                                type={input.type}\r\n                                label={I18n.t(input.title)}\r\n                                className={this.props.classes.optionsTextfield}\r\n                                disabled={this.inputDisabled(input)}\r\n                                helperText={input.help ? I18n.t(input.help) : ''}\r\n                                value={this.props.native.params[input.name]}\r\n                                InputProps={{endAdornment: input.dimension ? <InputAdornment position=\"end\">{I18n.t(input.dimension)}</InputAdornment> : null}}\r\n                                onChange={e => this.changeParam(input.name, e.target.value)}\r\n                            />}\r\n                            {this.state.ports ? <IconButton onClick={() => this.setState({customPort: !this.state.customPort})}><EditIcon/></IconButton> : null}\r\n                    </Box>;\r\n                } else {\r\n                    return <Box className={this.props.classes.optionContainer} key={input.name}>\r\n                        <TextField\r\n                            type={input.type}\r\n                            label={I18n.t(input.title)}\r\n                            className={this.props.classes.optionsTextfield}\r\n                            disabled={this.inputDisabled(input)}\r\n                            helperText={input.help ? I18n.t(input.help) : ''}\r\n                            value={this.props.native.params[input.name]}\r\n                            InputProps={{endAdornment: input.dimension ? <InputAdornment position=\"end\">{I18n.t(input.dimension)}</InputAdornment> : null}}\r\n                            onChange={e => this.changeParam(input.name, e.target.value)}\r\n                        />\r\n                    </Box>;\r\n                }\r\n            })\r\n            }\r\n        </Paper></>\r\n    }\r\n\r\n    render() {\r\n        return <form className={ this.props.classes.tab }>\r\n            <Grid container spacing={2} >\r\n                <Grid item xs={12} md={6} className={ this.props.classes.optionsGrid }>{this.getInputsBlock(connectionInputs, 'Connection parameters')}</Grid>\r\n                <Grid item xs={12} md={6} className={ this.props.classes.optionsGrid }>{this.getInputsBlock(generalInputs, 'General')}</Grid>\r\n            </Grid>\r\n        </form>;\r\n    }\r\n\r\n    changeParam = (name, value) => {\r\n        let native = JSON.parse(JSON.stringify(this.props.native));\r\n        native.params[name] = value;\r\n        if (name === 'slave') {\r\n            if (value === '1' || value === 1) {\r\n                native.params.multiDeviceId = false;\r\n                if (this.props.native.params.type !== 'serial') {\r\n                    this.readIPs();\r\n                }\r\n            }\r\n        } else\r\n        if (name === 'type') {\r\n            if (value !== 'tcp' && (native.params.slave === 1 || native.params.slave === '1')) {\r\n                native.params.slave = '0';\r\n            }\r\n\r\n            if (value === 'serial') {\r\n                this.readPorts();\r\n            }\r\n            if (value === 'serial' && (this.props.native.params.slave === '1' || this.props.native.params.slave === 1)) {\r\n                this.readIPs();\r\n            }\r\n        } else\r\n        if (name === 'showAliases') {\r\n            ['disInputs', 'inputRegs', 'holdingRegs', 'coils'].forEach(nativeParam => {\r\n                native[nativeParam].forEach(item => {\r\n                    if (value) {\r\n                        item._address = Utils.address2alias(nativeParam, item._address);\r\n                        if (native.params.directAddresses) {\r\n                            item._address = Utils.nonDirect2direct(nativeParam, item._address);\r\n                        }\r\n                    } else {\r\n                        if (native.params.directAddresses) {\r\n                            item._address = Utils.direct2nonDirect(nativeParam, item._address);\r\n                        }\r\n                        item._address = Utils.alias2address(nativeParam, item._address);\r\n                    }\r\n                });\r\n            });\r\n        } else\r\n        if (name === 'directAddresses' && native.params.showAliases) {\r\n            ['disInputs', 'coils'].forEach(nativeParam => {\r\n                native[nativeParam].forEach(item => {\r\n                    if (value) {\r\n                        item._address = Utils.nonDirect2direct(nativeParam, item._address);\r\n                    } else {\r\n                        item._address = Utils.direct2nonDirect(nativeParam, item._address);\r\n                    }\r\n                });\r\n            });\r\n        }\r\n        this.props.changeNative(native);\r\n    }\r\n}\r\n\r\nOptions.propTypes = {\r\n    common: PropTypes.object.isRequired,\r\n    native: PropTypes.object.isRequired,\r\n    instance: PropTypes.number.isRequired,\r\n    adapterName: PropTypes.string.isRequired,\r\n    onError: PropTypes.func,\r\n    onLoad: PropTypes.func,\r\n    onChange: PropTypes.func,\r\n    changed: PropTypes.bool,\r\n    socket: PropTypes.object.isRequired,\r\n    rooms: PropTypes.object,\r\n};\r\n\r\nexport default withStyles(styles)(Options);\r\n","import { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {withStyles} from '@material-ui/core/styles';\r\n\r\nimport { tsv2json, json2tsv } from 'tsv-json';\r\nimport { useSnackbar } from 'notistack';\r\nimport AceEditor from 'react-ace';\r\nimport copy from 'copy-to-clipboard';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\r\n\r\nconst styles = theme => ({\r\n    tsvEditor: {\r\n        width: '100%',\r\n        height: 400\r\n    },\r\n    tsvEditorTextarea: {\r\n        fontFamily: 'monospace'\r\n    }\r\n});\r\n\r\nconst TsvDialog = props => {\r\n    const [tsv, setTsv] = useState('');\r\n    useEffect(() => {\r\n        let tsvResult = [];\r\n        tsvResult.push(props.fields.map(field => field.name));\r\n        props.data.forEach(item =>\r\n            tsvResult.push(props.fields.map(field => item[field.name] !== undefined && item[field.name] !== null ? item[field.name].toString() : ''))\r\n        );\r\n        setTsv(json2tsv(tsvResult));\r\n    }, [props.open]); // eslint-disable-line react-hooks/exhaustive-deps\r\n    const { enqueueSnackbar } = useSnackbar();\r\n\r\n    if (!props.open) {\r\n        return null;\r\n    }\r\n\r\n    const saveTsv = () => {\r\n        let data = tsv2json(tsv);\r\n        let fields = data.shift();\r\n        let success = true;\r\n        let errors = [];\r\n        for (let index in props.fields) {\r\n            if (props.fields[index].name !== fields[index]) {\r\n                errors.push(<>No field <i>{props.fields[index].name}</i> in position <i>{parseInt(index) + 1}</i>!</>);\r\n                success = false;\r\n            }\r\n        }\r\n\r\n        data = data.map((itemValues, itemIndex) => {\r\n            let item = {};\r\n            for (let index in props.fields) {\r\n                if (props.fields[index].type === 'select' && !props.fields[index].options.map(option => option.value).includes(itemValues[index])) {\r\n                    errors.push(<>Value <i>{itemValues[index]}</i> is wrong for field <i>{props.fields[index].name}</i> in position <i>{parseInt(itemIndex) + 1}</i>!</>);\r\n                    success = false;\r\n                }\r\n                if (props.fields[index].type === 'checkbox') {\r\n                    itemValues[index] = itemValues[index] === 'true';\r\n                }\r\n                item[props.fields[index].name] = itemValues[index];\r\n            }\r\n            return item;\r\n        });\r\n\r\n        if (!success) {\r\n            enqueueSnackbar(<div>{errors.map((error, index) => <div key={index}>{error}</div>)}</div>, { variant: 'error' });\r\n            return;\r\n        }\r\n        props.save(data);\r\n        props.onClose();\r\n    };\r\n\r\n    return <Dialog\r\n        open={props.open}\r\n        onClose={props.onClose}\r\n        maxWidth=\"lg\"\r\n        fullWidth\r\n    >\r\n        <DialogTitle>{I18n.t('Edit data as TSV')}</DialogTitle>\r\n        <DialogContent>\r\n            <DialogContentText>{I18n.t('You can copy, paste and edit data as TSV.')}</DialogContentText>\r\n            <div>\r\n                <AceEditor\r\n                    onChange={e => setTsv(e)}\r\n                    height=\"400px\"\r\n                    showPrintMargin={false}\r\n                    value={tsv}\r\n                    className={props.classes.tsvEditor}\r\n                    width=\"100%\"\r\n                    setOptions={{firstLineNumber: 0}}\r\n                    mode={null}\r\n                />\r\n            </div>\r\n        </DialogContent>\r\n        <DialogActions>\r\n            <Button variant=\"outlined\" color=\"primary\" onClick={() => {\r\n                //Utils.copyToClipboard(tsv);\r\n                copy(tsv);\r\n                enqueueSnackbar(I18n.t('TSV was copied to clipboard'));\r\n            }} startIcon={<FileCopyIcon />}>{I18n.t('Copy to clipboard')}</Button>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={saveTsv} startIcon={<SaveIcon />}>{I18n.t('Import')}</Button>\r\n            <Button variant=\"contained\" onClick={props.onClose} startIcon={<ClearIcon />}>{I18n.t('Close')}</Button>\r\n        </DialogActions>\r\n    </Dialog>\r\n};\r\n\r\nTsvDialog.propTypes = {\r\n    open: PropTypes.bool,\r\n    onClose: PropTypes.func,\r\n    classes: PropTypes.object,\r\n    save: PropTypes.func,\r\n    fields: PropTypes.array,\r\n    data: PropTypes.array\r\n};\r\n\r\nexport default withStyles(styles)(TsvDialog);","import PropTypes from 'prop-types';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\n\r\nconst DeleteAllDialog = (props) => {\r\n    return props.open ? <Dialog open={props.open} onClose={props.onClose}>\r\n        <DialogTitle>{I18n.t('Delete all items')}</DialogTitle>\r\n        <DialogContent>\r\n            <DialogContentText>{I18n.t('Are you sure to delete all items?')}</DialogContentText>\r\n            <DialogActions>\r\n                <Button variant=\"contained\" color=\"secondary\" startIcon={<DeleteIcon />} onClick={() => {\r\n                    props.action();\r\n                    props.onClose();\r\n                }}>{I18n.t('Delete all items')}</Button>\r\n                <Button variant=\"contained\" onClick={props.onClose} startIcon={<ClearIcon />}>{I18n.t('Cancel')}</Button>\r\n            </DialogActions>\r\n        </DialogContent>\r\n    </Dialog> : null;\r\n}\r\n\r\nDeleteAllDialog.propTypes = {\r\n    open: PropTypes.bool,\r\n    action: PropTypes.func,\r\n    onClose: PropTypes.func,\r\n    classes: PropTypes.object,\r\n}\r\n\r\nexport default DeleteAllDialog;","import { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\n\r\nconst DeleteDialog = (props) => {\r\n    const [disableWarnings, setDisableWarnings] = useState(false);\r\n    useEffect(() => {\r\n        setDisableWarnings(false);\r\n    }, [props.open]);\r\n\r\n    return props.open ? <Dialog open={props.open} onClose={props.onClose}>\r\n        <DialogTitle>{I18n.t('Delete item')}</DialogTitle>\r\n        <DialogContent>\r\n            <DialogContentText>{I18n.t('Are you sure to delete item with address \"%s\"?', props.item._address)}</DialogContentText>\r\n            <DialogContentText><FormControlLabel\r\n                label={I18n.t('Don\\'t show this message in 5 minutes')}\r\n                control={<Checkbox\r\n                    checked={disableWarnings}\r\n                    onChange={e => setDisableWarnings(e.target.checked)}\r\n            />}/></DialogContentText>\r\n            <DialogActions>\r\n                <Button variant=\"contained\" color=\"secondary\" startIcon={<DeleteIcon />} onClick={() => {\r\n                    props.action(disableWarnings);\r\n                    props.onClose();\r\n                }}>{I18n.t('Delete')}</Button>\r\n                <Button variant=\"contained\" onClick={props.onClose} startIcon={<ClearIcon />}>{I18n.t('Cancel')}</Button>\r\n            </DialogActions>\r\n        </DialogContent>\r\n    </Dialog> : null;\r\n}\r\n\r\nDeleteDialog.propTypes = {\r\n    open: PropTypes.bool,\r\n    onClose: PropTypes.func,\r\n    classes: PropTypes.object,\r\n    action: PropTypes.func,\r\n    item: PropTypes.object,\r\n}\r\n\r\nexport default DeleteDialog;","import { useState, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {withStyles} from '@material-ui/core/styles';\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport ImportExport from '@material-ui/icons/ImportExport';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport Utils from '@iobroker/adapter-react/Components/Utils';\r\n\r\nimport ExpertIcon from '@iobroker/adapter-react/icons/IconExpert';\r\nimport TextWithIcon from '@iobroker/adapter-react/Components/TextWithIcon';\r\nimport SelectWithIcon from '@iobroker/adapter-react/Components/SelectWithIcon';\r\n\r\nimport TsvDialog from './TsvDialog';\r\nimport DeleteAllDialog from './DeleteAllDialog';\r\nimport DeleteDialog from './DeleteDialog';\r\n\r\nconst styles = theme => ({\r\n    tableHeader: {\r\n        whiteSpace: 'nowrap',\r\n        fontWeight: 'bold',\r\n        fontSize: '80%',\r\n        padding: '0px 8px'\r\n    },\r\n    tableHeaderExtended: {\r\n        color: theme.palette.type === 'dark' ? theme.palette.primary.light : theme.palette.primary.dark\r\n    },\r\n    tableCell: {\r\n        whiteSpace: 'nowrap',\r\n        fontSize: '80%',\r\n        padding: '0px 8px'\r\n    },\r\n    tableContainer: {\r\n        overflow: 'auto',\r\n        maxHeight: 'calc(100vh - 180px)'\r\n    },\r\n    tableTextField: {\r\n        fontSize: '80%'\r\n    },\r\n    tableSelect: {\r\n        fontSize: '80%'\r\n    },\r\n    tableTextFieldContainer: {\r\n        width: '100%'\r\n    },\r\n    tableSelectContainer: {\r\n        width: '100%'\r\n    },\r\n    nonEditMode: {\r\n        cursor: 'pointer'\r\n    }\r\n});\r\n\r\nconst DataCell = props => {\r\n    const sortedItem = props.sortedItem;\r\n    const field = props.field;\r\n    const editMode = props.editMode;\r\n    const setEditMode = props.setEditMode;\r\n\r\n    const ref = useRef();\r\n\r\n    let item = sortedItem.item;\r\n    let result;\r\n    if (field.type === 'checkbox') {\r\n        result = <Tooltip title={I18n.t(field.title)}>\r\n            <Checkbox\r\n                inputRef={ref}\r\n                className={props.classes.tableCheckbox}\r\n                checked={!!item[field.name]}\r\n                disabled={props.getDisable(sortedItem.$index, field.name)}\r\n                onChange={e => props.changeParam(sortedItem.$index, field.name, e.target.checked)}\r\n            />\r\n        </Tooltip>;\r\n    } else if (field.type === 'rooms') {\r\n        if (!editMode) {\r\n            result = <TextWithIcon list={props.rooms} value={item[field.name]} themeType={props.themeType}/>;\r\n        } else {\r\n            result = <SelectWithIcon\r\n                list={props.rooms}\r\n                allowNone={true}\r\n                value={item[field.name] === undefined || item[field.name] === null ? '' : item[field.name]}\r\n                dense={true}\r\n                themeType={props.themeType}\r\n                inputProps={{ref, className: props.classes.tableSelect}}\r\n                disabled={props.getDisable(sortedItem.$index, field.name)}\r\n                onChange={value => props.changeParam(sortedItem.$index, field.name, value)}\r\n                className={props.classes.tableSelectContainer}\r\n            />;\r\n        }\r\n    } else if (field.type === 'select') {\r\n        if (!editMode) {\r\n            let option = field.options.find(option => option.value === item[field.name]);\r\n            result = option ? option.title : '';\r\n        } else {\r\n            result = <Select\r\n                value={item[field.name] === undefined || item[field.name] === null ? '' : item[field.name]}\r\n                inputProps={{ref, className: props.classes.tableSelect}}\r\n                disabled={props.getDisable(sortedItem.$index, field.name)}\r\n                onChange={e => props.changeParam(sortedItem.$index, field.name, e.target.value)}\r\n                className={props.classes.tableSelectContainer}\r\n            >\r\n                {field.options.map(option =>\r\n                    <MenuItem key={option.value} value={option.value}>{option.title ? option.title : <i>{I18n.t('Nothing')}</i>}</MenuItem>\r\n                )}\r\n            </Select>;\r\n        }\r\n    } else {\r\n        if (!editMode) {\r\n            result = item[field.name] ? item[field.name] : null;\r\n        } else {\r\n            result = <TextField\r\n                value={item[field.name] === undefined || item[field.name] === null ? '' : item[field.name]}\r\n                className={props.classes.tableTextFieldContainer}\r\n                inputProps={{ref: ref, className: props.classes.tableTextField}}\r\n                type={field.type}\r\n                onChange={e => props.changeParam(sortedItem.$index, field.name, e.target.value)}\r\n                disabled={props.getDisable(sortedItem.$index, field.name)}\r\n            />;\r\n        }\r\n    }\r\n\r\n    return <TableCell\r\n        className={Utils.clsx(props.classes.tableCell, !editMode && props.classes.nonEditMode)}\r\n        onClick={e => {\r\n            setEditMode(true);\r\n            window.localStorage.setItem('Modbus.editMode', 'true');\r\n            window.setTimeout(() => ref.current && ref.current.focus(), 100);\r\n        }}\r\n    >\r\n        {result}\r\n    </TableCell>;\r\n}\r\n\r\nconst RegisterTable = props => {\r\n    const [tsvDialogOpen, setTsvDialogOpen] = useState(false);\r\n    const [editMode, setEditMode] = useState(parseInt(window.localStorage.getItem('Modbus.editMode'), 10) || 0);\r\n    const [extendedMode, setExtendedMode] = useState(window.localStorage.getItem('Modbus.extendedMode') === 'true');\r\n    const [deleteAllDialog, setDeleteAllDialog] = useState({\r\n        open: false,\r\n        action: null,\r\n    });\r\n    const [deleteDialog, setDeleteDialog] = useState({\r\n        open: false,\r\n        item: null,\r\n        action: null,\r\n    });\r\n\r\n    let sortedData = props.getSortedData(props.data, props.orderBy, props.order);\r\n\r\n    return <div>\r\n        <div>\r\n            <Tooltip title={I18n.t('Add line')}>\r\n                <IconButton onClick={e => {\r\n                    props.addItem();\r\n                }}>\r\n                    <AddIcon/>\r\n                </IconButton>\r\n            </Tooltip>\r\n            <Tooltip title={I18n.t('Edit as TSV (Tab separated values)')}>\r\n                <IconButton onClick={() => setTsvDialogOpen(true)}>\r\n                    <ImportExport/>\r\n                </IconButton>\r\n            </Tooltip>\r\n            <Tooltip title={I18n.t('Toggle extended mode')}>\r\n                <IconButton\r\n                    color={extendedMode ? 'primary' : 'inherit'}\r\n                    onClick={() => {\r\n                        window.localStorage.setItem('Modbus.extendedMode', extendedMode ? 'false' : 'true');\r\n                        setExtendedMode(!extendedMode);\r\n                    }}>\r\n                    <ExpertIcon/>\r\n                </IconButton>\r\n            </Tooltip>\r\n        </div>\r\n        <div className={props.classes.tableContainer}>\r\n            <Table size=\"small\"\r\n                   stickyHeader\r\n                   padding=\"none\"\r\n            >\r\n                <TableHead>\r\n                    <TableRow>\r\n                        {props.fields.filter(item => (extendedMode || !item.expert) && (!props.formulaDisabled || !item.formulaDisabled)).map(field => {\r\n                            let isChecked = false;\r\n                            let indeterminate = false;\r\n                            let trueFound = false;\r\n                            let falseFound = false;\r\n                            for (let k in props.data) {\r\n                                if (props.data[k][field.name]) {\r\n                                    isChecked = true;\r\n                                    trueFound = true;\r\n                                } else {\r\n                                    isChecked = false;\r\n                                    falseFound = true;\r\n                                }\r\n\r\n                                if (trueFound && falseFound) {\r\n                                    indeterminate = true;\r\n                                    isChecked = false;\r\n                                    break;\r\n                                }\r\n                            }\r\n\r\n                            return <TableCell\r\n                                key={field.name}\r\n                                style={{width: field.type === 'checkbox' ? 20 : field.width}}\r\n                                className={Utils.clsx(props.classes.tableHeader, field.expert && props.classes.tableHeaderExtended)}\r\n                                title={field.tooltip ? I18n.t(field.tooltip) : null}\r\n                            >\r\n                                {field.type === 'checkbox' ?\r\n                                    <Tooltip title={I18n.t('Change all')}>\r\n                                        <Checkbox\r\n                                            indeterminate={indeterminate}\r\n                                            checked={isChecked}\r\n                                            onChange={e => {\r\n                                                let newData = JSON.parse(JSON.stringify(props.data));\r\n                                                newData.forEach(item =>\r\n                                                    item[field.name] = e.target.checked);\r\n                                                props.changeData(newData);\r\n                                            }}\r\n                                        />\r\n                                    </Tooltip>\r\n                                    : null}\r\n                                {field.sorted ? <TableSortLabel\r\n                                    active={field.name === props.orderBy}\r\n                                    direction={props.order}\r\n                                    onClick={e => {\r\n                                        const isAsc = props.orderBy === field.name && props.order === 'asc';\r\n                                        props.onChangeOrder(field.name, isAsc ? 'desc' : 'asc');\r\n                                    }}\r\n                                >{I18n.t(field.title)}</TableSortLabel> : I18n.t(field.title)}\r\n                            </TableCell>\r\n                        })}\r\n                        <TableCell>\r\n                            <Tooltip title={I18n.t('Delete all')}>\r\n                                <div>\r\n                                    <IconButton\r\n                                        size=\"small\"\r\n                                        onClick={e => setDeleteAllDialog({\r\n                                            open: true,\r\n                                            action: () => props.changeData([]),\r\n                                        })}\r\n                                        disabled={!props.data.length}\r\n                                    >\r\n                                        <DeleteIcon/>\r\n                                    </IconButton>\r\n                                </div>\r\n                            </Tooltip>\r\n                        </TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {\r\n                        sortedData.map(sortedItem =>\r\n                            <TableRow hover key={sortedItem.$index}>\r\n                                {props.fields.filter(item => (extendedMode || !item.expert) && (!props.formulaDisabled || !item.formulaDisabled)).map(field =>\r\n                                    <DataCell\r\n                                        key={field.name}\r\n                                        themeType={props.themeType}\r\n                                        sortedItem={sortedItem}\r\n                                        field={field}\r\n                                        editMode={editMode === sortedItem.$index}\r\n                                        rooms={props.rooms}\r\n                                        setEditMode={() => setEditMode(sortedItem.$index)}\r\n                                        {...props}\r\n                                    />\r\n                                )}\r\n                                <TableCell>\r\n                                    <Tooltip title={I18n.t('Delete')}>\r\n                                        <div>\r\n                                            <IconButton size=\"small\" onClick={e => {\r\n                                                let lastTime = window.sessionStorage.getItem('disableDeleteDialogs');\r\n                                                if (lastTime && (new Date() - new Date(lastTime)) < 1000 * 60 * 5) {\r\n                                                    props.deleteItem(sortedItem.$index);\r\n                                                    return;\r\n                                                }\r\n                                                setDeleteDialog({\r\n                                                    open: true,\r\n                                                    action: disableDialogs => {\r\n                                                        if (disableDialogs) {\r\n                                                            window.sessionStorage.setItem('disableDeleteDialogs', (new Date()).toISOString());\r\n                                                        }\r\n                                                        props.deleteItem(sortedItem.$index);\r\n                                                    },\r\n                                                    item: sortedItem.item\r\n                                                })\r\n                                            }}>\r\n                                                <DeleteIcon/>\r\n                                            </IconButton>\r\n                                        </div>\r\n                                    </Tooltip>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        )\r\n                    }\r\n                </TableBody>\r\n            </Table>\r\n        </div>\r\n        {tsvDialogOpen ? <TsvDialog\r\n            open={true}\r\n            save={props.changeData}\r\n            onClose={() => setTsvDialogOpen(false)}\r\n            data={props.data}\r\n            fields={props.fields}\r\n        /> : null}\r\n        <DeleteAllDialog\r\n            open={deleteAllDialog.open}\r\n            action={deleteAllDialog.action}\r\n            onClose={() => setDeleteAllDialog({\r\n                open: false,\r\n                action: null,\r\n            })}\r\n        />\r\n        <DeleteDialog\r\n            open={deleteDialog.open}\r\n            action={deleteDialog.action}\r\n            onClose={() => setDeleteDialog({\r\n                open: false,\r\n                action: null,\r\n                item: null\r\n            })}\r\n            item={deleteDialog.item}\r\n        />\r\n    </div>;\r\n}\r\n\r\nRegisterTable.propTypes = {\r\n    data: PropTypes.array,\r\n    fields: PropTypes.array,\r\n    classes: PropTypes.object,\r\n    addItem: PropTypes.func,\r\n    changeData: PropTypes.func,\r\n    deleteItem: PropTypes.func,\r\n    rooms: PropTypes.object,\r\n    formulaDisabled: PropTypes.bool,\r\n    onChangeOrder: PropTypes.func,\r\n    getSortedData: PropTypes.func,\r\n    themeType: PropTypes.string,\r\n    showExtendedModeSwitch: PropTypes.bool,\r\n}\r\n\r\nexport default withStyles(styles)(RegisterTable);","import {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport RegisterTable from '../Components/RegisterTable';\r\nimport Utils from '../Components/Utils';\r\n\r\nclass BaseRegisters extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.nativeField = '';\r\n        this.state = {\r\n            order: window.localStorage.getItem('Modbus.order') || 'asc',\r\n            orderBy: window.localStorage.getItem('Modbus.orderBy') || '_address',\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (!window.localStorage.getItem('Modbus.orderBy')) {\r\n            this.fields = this.fields || this.getFields();\r\n            const isSlaveIDPresent = !!this.fields.find(item => item.name === 'deviceId');\r\n            const orderBy = isSlaveIDPresent ? 'deviceId' : '_address';\r\n\r\n            if (orderBy !== this.state.orderBy) {\r\n                this.setState({orderBy});\r\n            }\r\n        }\r\n    }\r\n\r\n    isShowExtendedModeSwitch() {\r\n        return true;\r\n    }\r\n\r\n    getFields() {\r\n        return null;\r\n    }\r\n\r\n    addressToCanonical(_address) {\r\n        let address = _address;\r\n        let params = this.props.native.params;\r\n        if (params.showAliases) {\r\n            if (params.directAddresses) {\r\n                address = Utils.direct2nonDirect(this.nativeField, address);\r\n            }\r\n            address = Utils.alias2address(this.nativeField, address);\r\n        }\r\n        return address;\r\n    }\r\n\r\n    changeParam = (index, name, value) => {\r\n        let data = JSON.parse(JSON.stringify(this.props.native[this.nativeField]));\r\n        data[index][name] = value;\r\n        if (name === '_address') {\r\n            data[index]['address'] = this.addressToCanonical(value);\r\n        }\r\n        this.props.onChange(this.nativeField, data);\r\n    }\r\n\r\n    addItem = () => {\r\n        let data = JSON.parse(JSON.stringify(this.props.native[this.nativeField]));\r\n        let newItem = {};\r\n        this.getFields().forEach(field => newItem[field.name] = '');\r\n        data.push(newItem);\r\n        this.props.onChange(this.nativeField, data);\r\n    }\r\n\r\n    deleteItem = index => {\r\n        let data = JSON.parse(JSON.stringify(this.props.native[this.nativeField]));\r\n        data.splice(index, 1);\r\n        this.props.onChange(this.nativeField, data);\r\n    }\r\n\r\n    changeData = data => {\r\n        this.props.onChange(this.nativeField, data);\r\n    }\r\n\r\n    getDisable = (index, name) => {\r\n        return false;\r\n    }\r\n\r\n    getSortedData = (data, orderBy, order) => {\r\n        data = data || this.props.native[this.nativeField];\r\n        orderBy = orderBy || this.state.orderBy;\r\n        order = order || this.state.order;\r\n        let sortedData = [];\r\n        data.forEach((item, index) => {sortedData[index] = {item, $index: index}});\r\n        const field = this.fields.find(item => item.name === orderBy);\r\n\r\n        sortedData.sort((sortedItem1, sortedItem2) => {\r\n            let sort1;\r\n            let sort2;\r\n            if (orderBy === 'deviceId') {\r\n                sort1 = (parseInt(sortedItem1.item.deviceId, 10) << 16) | parseInt(sortedItem1.item._address, 10);\r\n                sort2 = (parseInt(sortedItem2.item.deviceId, 10) << 16) | parseInt(sortedItem2.item._address, 10);\r\n            } else if (orderBy === '$index') {\r\n                sort1 = sortedItem1[orderBy];\r\n                sort2 = sortedItem2[orderBy];\r\n            } else if (field && field.type === 'number') {\r\n                sort1 = parseInt(sortedItem1.item[orderBy], 10);\r\n                sort2 = parseInt(sortedItem2.item[orderBy], 10);\r\n            } else {\r\n                sort1 = sortedItem1.item[orderBy];\r\n                sort2 = sortedItem2.item[orderBy];\r\n            }\r\n            return (order === 'asc' ? sort1 > sort2 : sort1 < sort2) ? 1 : -1;\r\n        });\r\n\r\n        return sortedData;\r\n    }\r\n\r\n    render() {\r\n        this.fields = this.fields || this.getFields();\r\n\r\n        return <Paper>\r\n            <RegisterTable\r\n                fields={this.fields}\r\n                data={this.props.native[this.nativeField]}\r\n                getSortedData={this.getSortedData}\r\n                showExtendedModeSwitch={this.isShowExtendedModeSwitch()}\r\n                changeParam={this.changeParam}\r\n                addItem={this.addItem}\r\n                deleteItem={this.deleteItem}\r\n                changeData={this.changeData}\r\n                getDisable={this.getDisable}\r\n                formulaDisabled={this.props.formulaDisabled}\r\n                rooms={this.props.rooms}\r\n                order={this.state.order}\r\n                orderBy={this.state.orderBy}\r\n                onChangeOrder={(orderBy, order) => {\r\n                    this.setState({orderBy, order});\r\n                    window.localStorage.setItem('Modbus.orderBy', orderBy);\r\n                    window.localStorage.setItem('Modbus.order', order);\r\n                }}\r\n            />\r\n        </Paper>\r\n    }\r\n}\r\n\r\nBaseRegisters.propTypes = {\r\n    common: PropTypes.object.isRequired,\r\n    native: PropTypes.object.isRequired,\r\n    instance: PropTypes.number.isRequired,\r\n    adapterName: PropTypes.string.isRequired,\r\n    onError: PropTypes.func,\r\n    onLoad: PropTypes.func,\r\n    onChange: PropTypes.func,\r\n    changed: PropTypes.bool,\r\n    socket: PropTypes.object.isRequired,\r\n    rooms: PropTypes.object,\r\n    formulaDisabled: PropTypes.bool,\r\n};\r\n\r\nexport default BaseRegisters;\r\n","import PropTypes from 'prop-types';\r\n\r\nimport types from '../data/types';\r\nimport roles from '../data/roles';\r\n\r\nimport BaseRegisters from './BaseRegisters';\r\n\r\nclass InputRegisters extends BaseRegisters {\r\n    nativeField = 'inputRegs';\r\n\r\n    getFields() {\r\n        let result = [\r\n            {name: '_address', title: 'Address', type: 'number', sorted: true, width: 20},\r\n            {name: 'name', title: 'Name', type: 'text', sorted: true},\r\n            {name: 'description', title: 'Description', type: 'text', sorted: true},\r\n            {name: 'unit', title: 'Unit', type: 'text', width: 30},\r\n            {name: 'type', title: 'Type', type: 'select', options: types, sorted: true},\r\n            {name: 'len', title: 'Length', type: 'text', width: 20},\r\n            {name: 'factor', title: 'Factor', type: 'text', width: 20, expert: true},\r\n            {name: 'offset', title: 'Offset', type: 'text', width: 20, expert: true},\r\n            {name: 'formula', title: 'Formula', type: 'text', formulaDisabled: true, expert: true},\r\n            {name: 'role', title: 'Role', type: 'select', options: roles, sorted: true},\r\n            {name: 'room', title: 'Room', type: 'rooms'},\r\n            {name: 'cw', title: 'CW', type: 'checkbox', tooltip: 'Cyclic write'},\r\n            {name: 'isScale', title: 'SF', type: 'checkbox', tooltip: 'Store this value as scaling factor', expert: true, formulaDisabled: true},\r\n        ];\r\n\r\n        if (this.props.native.params.multiDeviceId) {\r\n            result.splice(1, 0,\r\n                {name: 'deviceId', title: 'Slave ID', type: 'number', sorted: true, width: 20},\r\n            );\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    addItem = () => {\r\n        let data = JSON.parse(JSON.stringify(this.props.native[this.nativeField]));\r\n        let newItem = {}\r\n        this.getFields().forEach(field => newItem[field.name] = '')\r\n        if (data.length) {\r\n            let sortedData = this.getSortedData();\r\n            let lastItem = sortedData[sortedData.length - 1].item;\r\n            newItem._address = parseInt(lastItem._address, 10) + (lastItem.len ? parseInt(lastItem.len, 10) : 1);\r\n            while(sortedData.find(item => item.item._address >= newItem._address && item.item._address + parseInt(item.item.len || 1, 10) < newItem._address)) {\r\n                newItem._address++;\r\n            }\r\n            newItem.deviceId = lastItem.deviceId;\r\n            newItem.type = lastItem.type;\r\n            newItem.len = lastItem.len;\r\n            newItem.factor = lastItem.factor;\r\n            newItem.offset = lastItem.offset;\r\n            newItem.formula = lastItem.formula;\r\n            newItem.role = lastItem.role;\r\n            newItem.cw = lastItem.cw;\r\n            newItem.isScale = lastItem.isScale;\r\n        } else {\r\n            newItem.role = 'level';\r\n            newItem.factor = 1;\r\n            newItem.offset = 0;\r\n            newItem._address = this.props.native.params.showAliases ? 30001 : 0;\r\n        }\r\n        newItem.address = this.addressToCanonical(newItem._address);\r\n        data.push(newItem);\r\n        this.props.onChange(this.nativeField, data);\r\n    }\r\n\r\n    getDisable = (index, name) => {\r\n        if (name === 'len') {\r\n            if (!['string', 'stringle'].includes(this.props.native[this.nativeField][index].type)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    changeParam = (index, name, value) => {\r\n        let data = JSON.parse(JSON.stringify(this.props.native[this.nativeField]));\r\n        data[index][name] = value;\r\n        if (name === 'type') {\r\n            if (['', 'uint16be', 'uint16le', 'int16be', 'int16le', 'uint8be', 'uint8le', 'int8be', 'int8le'].includes(value)) {\r\n                data[index].len = 1;\r\n            }\r\n            if (['uint32be', 'uint32le', 'uint32sw', 'uint32sb', 'int32be', 'int32le', 'int32sw', 'int32sb', 'floatbe', 'floatle', 'floatsw', 'floatsb', 'string', 'stringle'].includes(value)) {\r\n                data[index].len = 2;\r\n            }\r\n            if (['uint64be', 'uint64le', 'doublebe', 'doublele'].includes(value)) {\r\n                data[index].len = 4;\r\n            }\r\n        }\r\n\r\n        if (name === '_address') {\r\n            data[index]['address'] = this.addressToCanonical(value);\r\n        }\r\n\r\n        this.props.onChange(this.nativeField, data);\r\n    }\r\n}\r\n\r\nInputRegisters.propTypes = {\r\n    common: PropTypes.object.isRequired,\r\n    native: PropTypes.object.isRequired,\r\n    instance: PropTypes.number.isRequired,\r\n    adapterName: PropTypes.string.isRequired,\r\n    onError: PropTypes.func,\r\n    onLoad: PropTypes.func,\r\n    onChange: PropTypes.func,\r\n    changed: PropTypes.bool,\r\n    socket: PropTypes.object.isRequired,\r\n    rooms: PropTypes.object,\r\n};\r\n\r\nexport default InputRegisters;\r\n","import PropTypes from 'prop-types';\r\n\r\nimport BaseRegisters from './BaseRegisters';\r\n\r\nimport roles from '../data/roles';\r\nimport types from '../data/types';\r\n\r\nclass HoldingRegisters extends BaseRegisters {\r\n    nativeField = 'holdingRegs';\r\n\r\n    getFields() {\r\n        //let rooms = this.getRooms();\r\n        //rooms.unshift({value: '', title: ''});\r\n\r\n        let result = [\r\n            {name: '_address', title: 'Address', type: 'number', sorted: true, width: 20},\r\n            {name: 'name', title: 'Name', type: 'text', sorted: true},\r\n            {name: 'description', title: 'Description', type: 'text', sorted: true},\r\n            {name: 'unit', title: 'Unit', type: 'text', width: 30},\r\n            {name: 'type', title: 'Type', type: 'select', options: types, sorted: true},\r\n            {name: 'len', title: 'Length', type: 'text', width: 20},\r\n            {name: 'factor', title: 'Factor', type: 'text', width: 20, expert: true},\r\n            {name: 'offset', title: 'Offset', type: 'text', width: 20, expert: true},\r\n            {name: 'formula', title: 'Formula', type: 'text', expert: true, formulaDisabled: true},\r\n            {name: 'role', title: 'Role', type: 'select', options: roles, sorted: true},\r\n            {name: 'room', title: 'Room', type: 'rooms'},\r\n            {name: 'poll', title: 'Poll', type: 'checkbox', tooltip: 'Enable polling of data point'},\r\n            {name: 'wp', title: 'WP', type: 'checkbox', tooltip: 'Write pulses (true → false edge)', expert: true},\r\n            {name: 'cw', title: 'CW', type: 'checkbox', tooltip: 'Cyclic write'},\r\n            {name: 'isScale', title: 'SF', type: 'checkbox', tooltip: 'Store this value as scaling factor', expert: true, formulaDisabled: true},\r\n        ];\r\n\r\n        if (this.props.native.params.multiDeviceId) {\r\n            result.splice(1, 0,\r\n                {name: 'deviceId', title: 'Slave ID', type: 'number', sorted: true, width: 20},\r\n            );\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    addItem = () => {\r\n        let data = JSON.parse(JSON.stringify(this.props.native[this.nativeField]));\r\n        let newItem = {}\r\n        this.getFields().forEach(field => newItem[field.name] = '');\r\n        if (data.length) {\r\n            let sortedData = this.getSortedData();\r\n            let lastItem = sortedData[sortedData.length - 1].item;\r\n            newItem._address = parseInt(lastItem._address, 10) + (lastItem.len ? parseInt(lastItem.len, 10) : 1);\r\n            while(sortedData.find(item => item.item._address >= newItem._address && item.item._address + parseInt(item.item.len || 1, 10) < newItem._address)) {\r\n                newItem._address++;\r\n            }\r\n            newItem.deviceId = lastItem.deviceId;\r\n            newItem.type = lastItem.type;\r\n            newItem.len = (lastItem.len ? parseInt(lastItem.len) : 1);\r\n            newItem.factor = lastItem.factor;\r\n            newItem.offset = lastItem.offset;\r\n            newItem.formula = lastItem.formula;\r\n            newItem.role = lastItem.role;\r\n            newItem.poll = lastItem.poll;\r\n            newItem.wp = lastItem.wp;\r\n            newItem.cw = lastItem.cw;\r\n            newItem.isScale = lastItem.isScale;\r\n        } else {\r\n            newItem.role = 'level';\r\n            newItem.factor = 1;\r\n            newItem.offset = 0;\r\n            newItem._address = this.props.native.params.showAliases ? 40001 : 0;\r\n        }\r\n        newItem.address = this.addressToCanonical(newItem._address);\r\n        data.push(newItem);\r\n        this.props.onChange(this.nativeField, data);\r\n    }\r\n\r\n    getDisable = (index, name) => {\r\n        return name === 'len' &&\r\n            !['string', 'stringle'].includes(this.props.native[this.nativeField][index].type);\r\n    }\r\n\r\n    changeParam = (index, name, value) => {\r\n        let data = JSON.parse(JSON.stringify(this.props.native[this.nativeField]));\r\n\r\n        data[index][name] = value;\r\n\r\n        if (name === 'type') {\r\n            if (['', 'uint16be', 'uint16le', 'int16be', 'int16le', 'uint8be', 'uint8le', 'int8be', 'int8le'].includes(value)) {\r\n                data[index].len = 1;\r\n            } else\r\n            if (['uint32be', 'uint32le', 'uint32sw', 'uint32sb', 'int32be', 'int32le', 'int32sw', 'int32sb', 'floatbe', 'floatle', 'floatsw', 'floatsb', 'string', 'stringle'].includes(value)) {\r\n                data[index].len = 2;\r\n            } else\r\n            if (['uint64be', 'uint64le', 'doublebe', 'doublele'].includes(value)) {\r\n                data[index].len = 4;\r\n            }\r\n        }\r\n\r\n        if (name === '_address') {\r\n            data[index]['address'] = this.addressToCanonical(value);\r\n        }\r\n\r\n        this.props.onChange(this.nativeField, data);\r\n    }\r\n}\r\n\r\nHoldingRegisters.propTypes = {\r\n    common: PropTypes.object.isRequired,\r\n    native: PropTypes.object.isRequired,\r\n    instance: PropTypes.number.isRequired,\r\n    adapterName: PropTypes.string.isRequired,\r\n    onError: PropTypes.func,\r\n    onLoad: PropTypes.func,\r\n    onChange: PropTypes.func,\r\n    changed: PropTypes.bool,\r\n    socket: PropTypes.object.isRequired,\r\n    rooms: PropTypes.object,\r\n};\r\n\r\nexport default HoldingRegisters;\r\n","import PropTypes from 'prop-types';\r\n\r\nimport roles from '../data/roles';\r\n\r\nimport BaseRegisters from './BaseRegisters';\r\n\r\nclass DiscreteInputs extends BaseRegisters {\r\n    nativeField = 'disInputs';\r\n\r\n    getFields() {\r\n        let result = [\r\n            {name: '_address', title: 'Address', type: 'number', sorted: true, width: 20},\r\n            {name: 'name', title: 'Name', type: 'text', sorted: true},\r\n            {name: 'description', title: 'Description', type: 'text', sorted: true},\r\n            {name: 'formula', title: 'Formula', type: 'text', expert: true, formulaDisabled: true},\r\n            {name: 'role', title: 'Role', type: 'select', options: roles, sorted: true},\r\n            {name: 'room', title: 'Room', type: 'rooms'},\r\n            {name: 'cw', title: 'CW', type: 'checkbox', tooltip: 'Cyclic write'},\r\n            {name: 'isScale', title: 'SF', type: 'checkbox', tooltip: 'Store this value as scaling factor', expert: true, formulaDisabled: true},\r\n        ];\r\n\r\n        if (this.props.native.params.multiDeviceId) {\r\n            result.splice(1, 0,\r\n                {name: 'deviceId', title: 'Slave ID', type: 'number', sorted: true, width: 20},\r\n            );\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    isShowExtendedModeSwitch() {\r\n        return this.props.native.params.slave !== 1 && this.props.native.params.slave !== '1';\r\n    }\r\n\r\n    addItem = () => {\r\n        let data = JSON.parse(JSON.stringify(this.props.native[this.nativeField]));\r\n        let newItem = {}\r\n        this.getFields().forEach(field => newItem[field.name] = '')\r\n        if (data.length) {\r\n            let sortedData = this.getSortedData();\r\n            let lastItem = sortedData[sortedData.length - 1].item;\r\n            newItem._address = parseInt(lastItem._address, 10) + 1;\r\n            while(sortedData.find(item => item.item._address === newItem._address)) {\r\n                newItem._address++;\r\n            }\r\n            newItem.deviceId = lastItem.deviceId;\r\n            newItem.formula = lastItem.formula;\r\n            newItem.role = lastItem.role;\r\n            newItem.cw = lastItem.cw;\r\n            newItem.isScale = lastItem.isScale;\r\n        } else {\r\n            newItem.role = 'level';\r\n            newItem._address = this.props.native.params.showAliases ? 10001 : 0;\r\n        }\r\n        newItem.address = this.addressToCanonical(newItem._address);\r\n        data.push(newItem);\r\n        this.props.onChange(this.nativeField, data);\r\n    }\r\n}\r\n\r\nDiscreteInputs.propTypes = {\r\n    common: PropTypes.object.isRequired,\r\n    native: PropTypes.object.isRequired,\r\n    instance: PropTypes.number.isRequired,\r\n    adapterName: PropTypes.string.isRequired,\r\n    onError: PropTypes.func,\r\n    onLoad: PropTypes.func,\r\n    onChange: PropTypes.func,\r\n    changed: PropTypes.bool,\r\n    socket: PropTypes.object.isRequired,\r\n    rooms: PropTypes.object,\r\n};\r\n\r\nexport default DiscreteInputs;\r\n","import PropTypes from 'prop-types';\r\n\r\nimport roles from '../data/roles';\r\n\r\nimport BaseRegisters from './BaseRegisters';\r\n\r\nclass Coils extends BaseRegisters {\r\n    nativeField = 'coils';\r\n\r\n    getFields() {\r\n        let result = [\r\n            {name: '_address', title: 'Address', type: 'number', sorted: true, width: 20},\r\n            {name: 'name', title: 'Name', type: 'text', sorted: true},\r\n            {name: 'description', title: 'Description', type: 'text', sorted: true},\r\n            {name: 'formula', title: 'Formula', type: 'text', expert: true, formulaDisabled: true},\r\n            {name: 'role', title: 'Role', type: 'select', options: roles, sorted: true},\r\n            {name: 'room', title: 'Room', type: 'rooms'},\r\n            {name: 'poll', title: 'Poll', type: 'checkbox'},\r\n            {name: 'wp', title: 'WP', type: 'checkbox', expert: true},\r\n            {name: 'cw', title: 'CW', type: 'checkbox'},\r\n            {name: 'isScale', title: 'SF', type: 'checkbox', tooltip: 'Store this value as scaling factor', expert: true, formulaDisabled: true},\r\n        ];\r\n\r\n        if (this.props.native.params.multiDeviceId) {\r\n            result.splice(1, 0,\r\n                {name: 'deviceId', title: 'Slave ID', type: 'number', sorted: true, width: 20},\r\n            );\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    addItem = () => {\r\n        let data = JSON.parse(JSON.stringify(this.props.native[this.nativeField]));\r\n        let newItem = {}\r\n        this.getFields().forEach(field => newItem[field.name] = '');\r\n        if (data.length) {\r\n            let sortedData = this.getSortedData();\r\n            let lastItem = sortedData[sortedData.length - 1].item;\r\n            newItem._address = parseInt(lastItem._address, 10) + 1;\r\n            while(sortedData.find(item => item.item._address === newItem._address)) {\r\n                newItem._address++;\r\n            }\r\n            newItem.deviceId = lastItem.deviceId;\r\n            newItem.formula = lastItem.formula;\r\n            newItem.role = lastItem.role;\r\n            newItem.poll = lastItem.poll;\r\n            newItem.wp = lastItem.wp;\r\n            newItem.cw = lastItem.cw;\r\n            newItem.isScale = lastItem.isScale;\r\n        } else {\r\n            newItem.role = 'level';\r\n            newItem._address = this.props.native.params.showAliases ? 1 : 0;\r\n        }\r\n        newItem.address = this.addressToCanonical(newItem._address);\r\n        data.push(newItem);\r\n        this.props.onChange(this.nativeField, data);\r\n    }\r\n}\r\n\r\nCoils.propTypes = {\r\n    common: PropTypes.object.isRequired,\r\n    native: PropTypes.object.isRequired,\r\n    instance: PropTypes.number.isRequired,\r\n    adapterName: PropTypes.string.isRequired,\r\n    onError: PropTypes.func,\r\n    onLoad: PropTypes.func,\r\n    onChange: PropTypes.func,\r\n    changed: PropTypes.bool,\r\n    socket: PropTypes.object.isRequired,\r\n    rooms: PropTypes.object,\r\n};\r\n\r\nexport default Coils;\r\n","import React from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport { MuiThemeProvider } from '@material-ui/core/styles';\r\nimport { SnackbarProvider } from 'notistack';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\nimport {AiOutlineFieldBinary as BinaryIcon} from 'react-icons/all';\r\nimport {TiSortNumerically as DigitsIcon} from 'react-icons/all';\r\n\r\nimport GenericApp from '@iobroker/adapter-react/GenericApp';\r\nimport Loader from '@iobroker/adapter-react/Components/Loader'\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\n\r\nimport TabOptions from './Tabs/Options';\r\nimport TabInputRegisters from './Tabs/InputRegisters';\r\nimport TabHoldingRegisters from './Tabs/HoldingRegisters';\r\nimport TabDiscreteInputs from './Tabs/DiscreteInputs';\r\nimport TabCoils from './Tabs/Coils';\r\n\r\nconst styles = theme => ({\r\n    root: {},\r\n    tabContent: {\r\n        padding: 10,\r\n        height: 'calc(100% - 64px - 48px - 20px)',\r\n        overflow: 'auto',\r\n    },\r\n    tabContentIFrame: {\r\n        padding: 10,\r\n        height: 'calc(100% - 64px - 48px - 20px - 38px)',\r\n        overflow: 'auto'\r\n    },\r\n    tab: {\r\n        width: '100%',\r\n        minHeight: '100%'\r\n    }\r\n});\r\n\r\nconst tabs = [\r\n    {\r\n        name: 'general',\r\n        title: 'General',\r\n        component: TabOptions,\r\n    },\r\n    {\r\n        name: 'discrete-inputs',\r\n        title: 'Discrete inputs',\r\n        component: TabDiscreteInputs,\r\n        icon: <BinaryIcon style={{width: 18, height: 18, marginRight: 4, display: 'inline-block'}}/>,\r\n        tooltip: 'Binary inputs (read-only)'\r\n    },\r\n    {\r\n        name: 'coils',\r\n        title: 'Coils',\r\n        component: TabCoils,\r\n        icon: <BinaryIcon style={{width: 18, height: 18, marginRight: 4, display: 'inline-block'}}/>,\r\n        tooltip: 'Binary inputs and outputs'\r\n    },\r\n    {\r\n        name: 'input-registers',\r\n        title: 'Input Registers',\r\n        component: TabInputRegisters,\r\n        icon: <DigitsIcon style={{width: 18, height: 18, marginRight: 4, display: 'inline-block'}}/>,\r\n        tooltip: 'Input registers (8-64 bit values, read-only)'\r\n    },\r\n    {\r\n        name: 'holding-registers',\r\n        title: 'Holding Registers',\r\n        component: TabHoldingRegisters,\r\n        icon: <DigitsIcon style={{width: 18, height: 18, marginRight: 4, display: 'inline-block'}}/>,\r\n        tooltip: 'Input/output registers (8-64 bit values)'\r\n    },\r\n]\r\n\r\nclass App extends GenericApp {\r\n    constructor(props) {\r\n        // TODO: delete it after adapter-react 1.0.27 (BF: 2021.06.09)\r\n        if (window.io && window.location.port === '3000') {\r\n            console.log('Reaload!');\r\n            delete window.io;\r\n            window.io = new window.SocketClient();\r\n        }\r\n        const extendedProps = {...props};\r\n        extendedProps.encryptedFields = ['pass'];\r\n\r\n        extendedProps.translations = {\r\n            'en': require('./i18n/en'),\r\n            'de': require('./i18n/de'),\r\n            'ru': require('./i18n/ru'),\r\n            'pt': require('./i18n/pt'),\r\n            'nl': require('./i18n/nl'),\r\n            'fr': require('./i18n/fr'),\r\n            'it': require('./i18n/it'),\r\n            'es': require('./i18n/es'),\r\n            'pl': require('./i18n/pl'),\r\n            'zh-cn': require('./i18n/zh-cn'),\r\n        };\r\n\r\n        super(props, extendedProps);\r\n        this.state.moreLoaded = false;\r\n        this.state.rooms = null;\r\n    }\r\n\r\n    onConnectionReady() {\r\n        super.onConnectionReady();\r\n        this.socket.getEnums('rooms')\r\n            .then(rooms =>\r\n                this.setState({moreLoaded: true, rooms}));\r\n    }\r\n\r\n    getSelectedTab() {\r\n        const selectedTab = this.state.selectedTab;\r\n        if (!selectedTab) {\r\n            return 0;\r\n        } else {\r\n            return tabs.findIndex(tab => tab.name === selectedTab);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.loaded || !this.state.moreLoaded) {\r\n            return <MuiThemeProvider theme={this.state.theme}>\r\n                <Loader theme={this.state.themeType} />\r\n            </MuiThemeProvider>;\r\n        }\r\n\r\n        return <MuiThemeProvider theme={this.state.theme}>\r\n            <SnackbarProvider>\r\n                <div className=\"App\" style={{background: this.state.theme.palette.background.default, color: this.state.theme.palette.text.primary}}>\r\n                    <AppBar position=\"static\">\r\n                        <Tabs\r\n                            value={this.getSelectedTab()}\r\n                            onChange={(e, index) => this.selectTab(tabs[index].name, index)}\r\n                            variant=\"scrollable\" scrollButtons=\"auto\">\r\n                            {tabs.map(tab => {\r\n                                return <Tab\r\n                                    label={tab.icon ? <>{tab.icon}{I18n.t(tab.title)}</> : I18n.t(tab.title)}\r\n                                    data-name={tab.name}\r\n                                    key={tab.name}\r\n                                    title={tab.tooltip ? I18n.t(tab.tooltip) : undefined}\r\n                                />\r\n                            })}\r\n                        </Tabs>\r\n                    </AppBar>\r\n                    <div className={this.isIFrame ? this.props.classes.tabContentIFrame : this.props.classes.tabContent}>\r\n                        {tabs.map((tab, index) => {\r\n                            const TabComponent = tab.component;\r\n                            if (this.state.selectedTab) {\r\n                                if (this.state.selectedTab !== tab.name) {\r\n                                    return null;\r\n                                }\r\n                            } else {\r\n                                if (index !== 0) {\r\n                                    return null;\r\n                                }\r\n                            }\r\n                            return <TabComponent\r\n                                key={tab.name}\r\n                                formulaDisabled={this.state.native.params.slave === '1' || this.state.native.params.slave === 1}\r\n                                common={this.common}\r\n                                socket={this.socket}\r\n                                native={this.state.native}\r\n                                onError={text => this.setState({errorText: (text || text === 0) && typeof text !== 'string' ? text.toString() : text})}\r\n                                onLoad={native => this.onLoadConfig(native)}\r\n                                instance={this.instance}\r\n                                adapterName={this.adapterName}\r\n                                changed={this.state.changed}\r\n                                onChange={(attr, value, cb) => this.updateNativeValue(attr, value, cb)}\r\n                                changeNative={(value) => this.setState({native: value, changed: this.getIsChanged(value)})}\r\n                                rooms={this.state.rooms}\r\n                            />\r\n                        })}\r\n                    </div>\r\n                    {this.renderError()}\r\n                    {this.renderSaveCloseButtons()}\r\n                </div>\r\n            </SnackbarProvider>\r\n        </MuiThemeProvider>;\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport * as Sentry from '@sentry/browser';\r\nimport * as SentryIntegrations from '@sentry/integrations';\r\nimport { MuiThemeProvider} from '@material-ui/core/styles';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {version} from '../package.json';\r\nimport theme from '@iobroker/adapter-react/Theme';\r\nimport Utils from '@iobroker/adapter-react/Components/Utils';\r\n\r\nwindow.adapterName = 'modbus';\r\nlet themeName = Utils.getThemeName();\r\n\r\nconsole.log(`iobroker.${window.adapterName}@${version} using theme \"${themeName}\"`);\r\n\r\nfunction build() {\r\n    return ReactDOM.render(\r\n        <MuiThemeProvider theme={theme(themeName)}>\r\n            <App\r\n                onThemeChange={_theme => {\r\n                    themeName = _theme;\r\n                    build();\r\n                }}\r\n            />\r\n        </MuiThemeProvider>,\r\n        document.getElementById('root')\r\n    );\r\n}\r\n\r\nif (false && window.location.host !== 'localhost:3000') {\r\n    Sentry.init({\r\n        dsn: 'https://5ad729dbed504d15aa8bde423cae9a8e@sentry.iobroker.net/57',\r\n        release: `iobroker.${window.adapterName}@${version}`,\r\n        integrations: [\r\n            new SentryIntegrations.Dedupe()\r\n        ]\r\n    });\r\n}\r\n\r\nbuild();\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}